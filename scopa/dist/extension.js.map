{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://tergo/webpack/runtime/require chunk loading","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/common/api.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/common/componentModel.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/common/connection.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/common/promises.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/common/ral.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/common/semaphore.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/node/main.js","webpack://tergo/./node_modules/@vscode/wasm-component-model/lib/node/ril.js","webpack://tergo/./src/extension.ts","webpack://tergo/./src/tergo.ts","webpack://tergo/external node-commonjs \"crypto\"","webpack://tergo/./node_modules/uuid/dist/esm-node/rng.js","webpack://tergo/./node_modules/uuid/dist/esm-node/regex.js","webpack://tergo/./node_modules/uuid/dist/esm-node/validate.js","webpack://tergo/./node_modules/uuid/dist/esm-node/stringify.js","webpack://tergo/./node_modules/uuid/dist/esm-node/v1.js","webpack://tergo/./node_modules/uuid/dist/esm-node/parse.js","webpack://tergo/./node_modules/uuid/dist/esm-node/v35.js","webpack://tergo/./node_modules/uuid/dist/esm-node/md5.js","webpack://tergo/./node_modules/uuid/dist/esm-node/v3.js","webpack://tergo/./node_modules/uuid/dist/esm-node/native.js","webpack://tergo/./node_modules/uuid/dist/esm-node/v4.js","webpack://tergo/./node_modules/uuid/dist/esm-node/v5.js","webpack://tergo/./node_modules/uuid/dist/esm-node/sha1.js","webpack://tergo/./node_modules/uuid/dist/esm-node/nil.js","webpack://tergo/./node_modules/uuid/dist/esm-node/version.js","webpack://tergo/external commonjs \"vscode\"","webpack://tergo/external node-commonjs \"util\"","webpack://tergo/external node-commonjs \"worker_threads\"","webpack://tergo/webpack/bootstrap","webpack://tergo/webpack/runtime/compat get default export","webpack://tergo/webpack/runtime/define property getters","webpack://tergo/webpack/runtime/ensure chunk","webpack://tergo/webpack/runtime/get javascript chunk filename","webpack://tergo/webpack/runtime/hasOwnProperty shorthand","webpack://tergo/webpack/runtime/make namespace object","webpack://tergo/webpack/startup"],"sourcesContent":["// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t792: 1\n};\n\n// no on chunks loaded\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.f32 = exports.char = exports.byte = exports.bool = exports.WasmContext = exports.VariantType = exports.Uint8ArrayType = exports.Uint32ArrayType = exports.Uint16ArrayType = exports.TupleType = exports.StaticMethodType = exports.ResultType = exports.ResultError = exports.ResourceType = exports.ResourceManagers = exports.ResourceManager = exports.ResourceHandleType = exports.Resource = exports.RecordType = exports.ReadonlyMemoryRange = exports.PackageType = exports.OwnType = exports.Options = exports.OptionType = exports.MethodType = exports.MemoryRange = exports.MemoryError = exports.Memory = exports.ListType = exports.InterfaceType = exports.Int8ArrayType = exports.Int32ArrayType = exports.Int16ArrayType = exports.FunctionType = exports.FlatTypeKind = exports.FlagsType = exports.EnumType = exports.DestructorType = exports.ConstructorType = exports.ComponentModelTypeKind = exports.ComponentModelTrap = exports.ComponentModelContext = exports.BorrowType = exports.BigUint64ArrayType = exports.BigInt64ArrayType = exports.BaseMemoryRange = exports.Alignment = exports.$main = exports.$imports = exports.$exports = void 0;\nexports.RAL = exports.Connection = exports.wstring = exports.u8 = exports.u64 = exports.u32 = exports.u16 = exports.size = exports.s8 = exports.s64 = exports.s32 = exports.s16 = exports.result = exports.ptr = exports.option = exports.i64 = exports.i32 = exports.float64 = exports.float32 = exports.f64 = void 0;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst ral_1 = __importDefault(require(\"./ral\"));\nexports.RAL = ral_1.default;\nvar componentModel_1 = require(\"./componentModel\");\nObject.defineProperty(exports, \"$exports\", { enumerable: true, get: function () { return componentModel_1.$exports; } });\nObject.defineProperty(exports, \"$imports\", { enumerable: true, get: function () { return componentModel_1.$imports; } });\nObject.defineProperty(exports, \"$main\", { enumerable: true, get: function () { return componentModel_1.$main; } });\nObject.defineProperty(exports, \"Alignment\", { enumerable: true, get: function () { return componentModel_1.Alignment; } });\nObject.defineProperty(exports, \"BaseMemoryRange\", { enumerable: true, get: function () { return componentModel_1.BaseMemoryRange; } });\nObject.defineProperty(exports, \"BigInt64ArrayType\", { enumerable: true, get: function () { return componentModel_1.BigInt64ArrayType; } });\nObject.defineProperty(exports, \"BigUint64ArrayType\", { enumerable: true, get: function () { return componentModel_1.BigUint64ArrayType; } });\nObject.defineProperty(exports, \"BorrowType\", { enumerable: true, get: function () { return componentModel_1.BorrowType; } });\nObject.defineProperty(exports, \"ComponentModelContext\", { enumerable: true, get: function () { return componentModel_1.ComponentModelContext; } });\nObject.defineProperty(exports, \"ComponentModelTrap\", { enumerable: true, get: function () { return componentModel_1.ComponentModelTrap; } });\nObject.defineProperty(exports, \"ComponentModelTypeKind\", { enumerable: true, get: function () { return componentModel_1.ComponentModelTypeKind; } });\nObject.defineProperty(exports, \"ConstructorType\", { enumerable: true, get: function () { return componentModel_1.ConstructorType; } });\nObject.defineProperty(exports, \"DestructorType\", { enumerable: true, get: function () { return componentModel_1.DestructorType; } });\nObject.defineProperty(exports, \"EnumType\", { enumerable: true, get: function () { return componentModel_1.EnumType; } });\nObject.defineProperty(exports, \"FlagsType\", { enumerable: true, get: function () { return componentModel_1.FlagsType; } });\nObject.defineProperty(exports, \"FlatTypeKind\", { enumerable: true, get: function () { return componentModel_1.FlatTypeKind; } });\nObject.defineProperty(exports, \"FunctionType\", { enumerable: true, get: function () { return componentModel_1.FunctionType; } });\nObject.defineProperty(exports, \"Int16ArrayType\", { enumerable: true, get: function () { return componentModel_1.Int16ArrayType; } });\nObject.defineProperty(exports, \"Int32ArrayType\", { enumerable: true, get: function () { return componentModel_1.Int32ArrayType; } });\nObject.defineProperty(exports, \"Int8ArrayType\", { enumerable: true, get: function () { return componentModel_1.Int8ArrayType; } });\nObject.defineProperty(exports, \"InterfaceType\", { enumerable: true, get: function () { return componentModel_1.InterfaceType; } });\nObject.defineProperty(exports, \"ListType\", { enumerable: true, get: function () { return componentModel_1.ListType; } });\nObject.defineProperty(exports, \"Memory\", { enumerable: true, get: function () { return componentModel_1.Memory; } });\nObject.defineProperty(exports, \"MemoryError\", { enumerable: true, get: function () { return componentModel_1.MemoryError; } });\nObject.defineProperty(exports, \"MemoryRange\", { enumerable: true, get: function () { return componentModel_1.MemoryRange; } });\nObject.defineProperty(exports, \"MethodType\", { enumerable: true, get: function () { return componentModel_1.MethodType; } });\nObject.defineProperty(exports, \"OptionType\", { enumerable: true, get: function () { return componentModel_1.OptionType; } });\nObject.defineProperty(exports, \"Options\", { enumerable: true, get: function () { return componentModel_1.Options; } });\nObject.defineProperty(exports, \"OwnType\", { enumerable: true, get: function () { return componentModel_1.OwnType; } });\nObject.defineProperty(exports, \"PackageType\", { enumerable: true, get: function () { return componentModel_1.PackageType; } });\nObject.defineProperty(exports, \"ReadonlyMemoryRange\", { enumerable: true, get: function () { return componentModel_1.ReadonlyMemoryRange; } });\nObject.defineProperty(exports, \"RecordType\", { enumerable: true, get: function () { return componentModel_1.RecordType; } });\nObject.defineProperty(exports, \"Resource\", { enumerable: true, get: function () { return componentModel_1.Resource; } });\nObject.defineProperty(exports, \"ResourceHandleType\", { enumerable: true, get: function () { return componentModel_1.ResourceHandleType; } });\nObject.defineProperty(exports, \"ResourceManager\", { enumerable: true, get: function () { return componentModel_1.ResourceManager; } });\nObject.defineProperty(exports, \"ResourceManagers\", { enumerable: true, get: function () { return componentModel_1.ResourceManagers; } });\nObject.defineProperty(exports, \"ResourceType\", { enumerable: true, get: function () { return componentModel_1.ResourceType; } });\nObject.defineProperty(exports, \"ResultError\", { enumerable: true, get: function () { return componentModel_1.ResultError; } });\nObject.defineProperty(exports, \"ResultType\", { enumerable: true, get: function () { return componentModel_1.ResultType; } });\nObject.defineProperty(exports, \"StaticMethodType\", { enumerable: true, get: function () { return componentModel_1.StaticMethodType; } });\nObject.defineProperty(exports, \"TupleType\", { enumerable: true, get: function () { return componentModel_1.TupleType; } });\nObject.defineProperty(exports, \"Uint16ArrayType\", { enumerable: true, get: function () { return componentModel_1.Uint16ArrayType; } });\nObject.defineProperty(exports, \"Uint32ArrayType\", { enumerable: true, get: function () { return componentModel_1.Uint32ArrayType; } });\nObject.defineProperty(exports, \"Uint8ArrayType\", { enumerable: true, get: function () { return componentModel_1.Uint8ArrayType; } });\nObject.defineProperty(exports, \"VariantType\", { enumerable: true, get: function () { return componentModel_1.VariantType; } });\nObject.defineProperty(exports, \"WasmContext\", { enumerable: true, get: function () { return componentModel_1.WasmContext; } });\nObject.defineProperty(exports, \"bool\", { enumerable: true, get: function () { return componentModel_1.bool; } });\nObject.defineProperty(exports, \"byte\", { enumerable: true, get: function () { return componentModel_1.byte; } });\nObject.defineProperty(exports, \"char\", { enumerable: true, get: function () { return componentModel_1.char; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return componentModel_1.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return componentModel_1.f64; } });\nObject.defineProperty(exports, \"float32\", { enumerable: true, get: function () { return componentModel_1.float32; } });\nObject.defineProperty(exports, \"float64\", { enumerable: true, get: function () { return componentModel_1.float64; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return componentModel_1.i32; } });\nObject.defineProperty(exports, \"i64\", { enumerable: true, get: function () { return componentModel_1.i64; } });\nObject.defineProperty(exports, \"option\", { enumerable: true, get: function () { return componentModel_1.option; } });\nObject.defineProperty(exports, \"ptr\", { enumerable: true, get: function () { return componentModel_1.ptr; } });\nObject.defineProperty(exports, \"result\", { enumerable: true, get: function () { return componentModel_1.result; } });\nObject.defineProperty(exports, \"s16\", { enumerable: true, get: function () { return componentModel_1.s16; } });\nObject.defineProperty(exports, \"s32\", { enumerable: true, get: function () { return componentModel_1.s32; } });\nObject.defineProperty(exports, \"s64\", { enumerable: true, get: function () { return componentModel_1.s64; } });\nObject.defineProperty(exports, \"s8\", { enumerable: true, get: function () { return componentModel_1.s8; } });\nObject.defineProperty(exports, \"size\", { enumerable: true, get: function () { return componentModel_1.size; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return componentModel_1.u16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return componentModel_1.u32; } });\nObject.defineProperty(exports, \"u64\", { enumerable: true, get: function () { return componentModel_1.u64; } });\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return componentModel_1.u8; } });\nObject.defineProperty(exports, \"wstring\", { enumerable: true, get: function () { return componentModel_1.wstring; } });\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"Connection\", { enumerable: true, get: function () { return connection_1.Connection; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VariantType = exports.FlagsType = exports.tuple = exports.TupleType = exports.RecordType = exports.Float64ArrayType = exports.Float32ArrayType = exports.BigUint64ArrayType = exports.Uint32ArrayType = exports.Uint16ArrayType = exports.Uint8ArrayType = exports.BigInt64ArrayType = exports.Int32ArrayType = exports.Int16ArrayType = exports.Int8ArrayType = exports.list = exports.ListType = exports.wstring = exports.char = exports.ptr = exports.size = exports.byte = exports.float64 = exports.float32 = exports.s64 = exports.s32 = exports.s16 = exports.s8 = exports.u64 = exports.u32 = exports.u16 = exports.u8 = exports.bool = exports.ResultError = exports.ComponentModelContext = exports.ComponentModelTypeKind = exports.FlatTuple = exports.f64 = exports.f32 = exports.i64 = exports.i32 = exports.FlatTypeKind = exports.Options = exports.Memory = exports.MemoryRange = exports.ReadonlyMemoryRange = exports.BaseMemoryRange = exports.MemoryError = exports.Alignment = exports.ComponentModelTrap = void 0;\nexports.$main = exports.$exports = exports.$imports = exports.WasmContext = exports.PackageType = exports.InterfaceType = exports.OwnType = exports.BorrowType = exports.ResourceType = exports.ResourceHandleType = exports.MethodType = exports.StaticMethodType = exports.DestructorType = exports.ConstructorType = exports.FunctionType = exports.ResourceManagers = exports.ResourceManager = exports.Resource = exports.ResultType = exports.result = exports.OptionType = exports.option = exports.EnumType = void 0;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst uuid = __importStar(require(\"uuid\"));\nconst ral_1 = __importDefault(require(\"./ral\"));\n// Type arrays are stored either little or big endian depending on the platform.\n// The component model requires little endian so we throw for now if the platform\n// is big endian. We can alternatively use data views in type arrays component\n// model types to support big endian platforms.\nconst isLittleEndian = new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\nif (!isLittleEndian) {\n    throw new Error('Big endian platforms are currently not supported.');\n}\nclass ComponentModelTrap extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ComponentModelTrap = ComponentModelTrap;\nvar BigInts;\n(function (BigInts) {\n    const MAX_VALUE_AS_BIGINT = BigInt(Number.MAX_VALUE);\n    function asNumber(value) {\n        if (value > MAX_VALUE_AS_BIGINT) {\n            throw new ComponentModelTrap('Value too big for number');\n        }\n        return Number(value);\n    }\n    BigInts.asNumber = asNumber;\n    function max(...args) {\n        return args.reduce((m, e) => e > m ? e : m);\n    }\n    BigInts.max = max;\n    function min(...args) {\n        return args.reduce((m, e) => e < m ? e : m);\n    }\n    BigInts.min = min;\n})(BigInts || (BigInts = {}));\nconst utf8Decoder = (0, ral_1.default)().TextDecoder.create('utf-8');\nconst utf8Encoder = (0, ral_1.default)().TextEncoder.create('utf-8');\nvar Alignment;\n(function (Alignment) {\n    Alignment[Alignment[\"byte\"] = 1] = \"byte\";\n    Alignment[Alignment[\"halfWord\"] = 2] = \"halfWord\";\n    Alignment[Alignment[\"word\"] = 4] = \"word\";\n    Alignment[Alignment[\"doubleWord\"] = 8] = \"doubleWord\";\n})(Alignment || (exports.Alignment = Alignment = {}));\n(function (Alignment) {\n    function align(ptr, alignment) {\n        return Math.ceil(ptr / alignment) * alignment;\n    }\n    Alignment.align = align;\n    function getAlignment(ptr) {\n        if (ptr % Alignment.doubleWord === 0) {\n            return Alignment.doubleWord;\n        }\n        if (ptr % Alignment.word === 0) {\n            return Alignment.word;\n        }\n        if (ptr % Alignment.halfWord === 0) {\n            return Alignment.halfWord;\n        }\n        return Alignment.byte;\n    }\n    Alignment.getAlignment = getAlignment;\n})(Alignment || (exports.Alignment = Alignment = {}));\nconst align = Alignment.align;\nclass MemoryError extends ComponentModelTrap {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.MemoryError = MemoryError;\nclass BaseMemoryRange {\n    _memory;\n    _ptr;\n    _size;\n    _alignment;\n    _view;\n    constructor(memory, ptr, size) {\n        this._memory = memory;\n        this._ptr = ptr;\n        this._size = size;\n        this._alignment = Alignment.getAlignment(ptr);\n    }\n    get memory() {\n        return this._memory;\n    }\n    get ptr() {\n        return this._ptr;\n    }\n    get size() {\n        return this._size;\n    }\n    get alignment() {\n        return this._alignment;\n    }\n    get view() {\n        if (this._view === undefined || this._view.buffer !== this._memory.buffer) {\n            this._view = new DataView(this._memory.buffer, this._ptr, this._size);\n        }\n        return this._view;\n    }\n    getUint8(offset) {\n        return this.view.getUint8(offset);\n    }\n    getInt8(offset) {\n        return this.view.getInt8(offset);\n    }\n    getUint16(offset) {\n        this.assertAlignment(offset, Alignment.halfWord);\n        return this.view.getUint16(offset, true);\n    }\n    getInt16(offset) {\n        this.assertAlignment(offset, Alignment.halfWord);\n        return this.view.getInt16(offset, true);\n    }\n    getUint32(offset) {\n        this.assertAlignment(offset, Alignment.word);\n        return this.view.getUint32(offset, true);\n    }\n    getInt32(offset) {\n        this.assertAlignment(offset, Alignment.word);\n        return this.view.getInt32(offset, true);\n    }\n    getUint64(offset) {\n        this.assertAlignment(offset, Alignment.doubleWord);\n        return this.view.getBigUint64(offset, true);\n    }\n    getInt64(offset) {\n        this.assertAlignment(offset, Alignment.doubleWord);\n        return this.view.getBigInt64(offset, true);\n    }\n    getFloat32(offset) {\n        this.assertAlignment(offset, Alignment.word);\n        return this.view.getFloat32(offset, true);\n    }\n    getFloat64(offset) {\n        this.assertAlignment(offset, Alignment.doubleWord);\n        return this.view.getFloat64(offset, true);\n    }\n    getPtr(offset) {\n        this.assertAlignment(offset, Alignment.word);\n        return this.view.getUint32(offset, true);\n    }\n    getUint8Array(offset, length) {\n        return this.getArray(offset, length, Uint8Array);\n    }\n    getInt8Array(offset, length) {\n        return this.getArray(offset, length, Int8Array);\n    }\n    getUint16Array(byteOffset, length) {\n        return this.getArray(byteOffset, length, Uint16Array);\n    }\n    getInt16Array(byteOffset, length) {\n        return this.getArray(byteOffset, length, Int16Array);\n    }\n    getUint32Array(byteOffset, length) {\n        return this.getArray(byteOffset, length, Uint32Array);\n    }\n    getInt32Array(byteOffset, length) {\n        return this.getArray(byteOffset, length, Int32Array);\n    }\n    getUint64Array(byteOffset, length) {\n        return this.getBigArray(byteOffset, length, BigUint64Array);\n    }\n    getInt64Array(byteOffset, length) {\n        return this.getBigArray(byteOffset, length, BigInt64Array);\n    }\n    getFloat32Array(byteOffset, length) {\n        return this.getArray(byteOffset, length, Float32Array);\n    }\n    getFloat64Array(byteOffset, length) {\n        return this.getArray(byteOffset, length, Float64Array);\n    }\n    copyBytes(offset, length, into, into_offset) {\n        if (offset + length > this.size) {\n            throw new MemoryError(`Memory access is out of bounds. Accessing [${offset}, ${length}], allocated[${this.ptr}, ${this.size}]`);\n        }\n        const target = into.getUint8View(into_offset, length);\n        target.set(new Uint8Array(this._memory.buffer, this.ptr + offset, length));\n    }\n    assertAlignment(offset, alignment) {\n        if (alignment > this.alignment || offset % alignment !== 0) {\n            throw new MemoryError(`Memory location is not aligned to ${alignment}. Allocated[${this.ptr},${this.size}]`);\n        }\n    }\n    getArray(byteOffset, length, clazz) {\n        length = length ?? (this.size - byteOffset) / clazz.BYTES_PER_ELEMENT;\n        if (!Number.isInteger(length)) {\n            throw new MemoryError(`Length must be an integer value. Got ${length}.`);\n        }\n        const result = new clazz(length);\n        result.set(new clazz(this._memory.buffer, this.ptr + byteOffset, length));\n        return result;\n    }\n    getBigArray(byteOffset, length, clazz) {\n        length = length ?? (this.size - byteOffset) / clazz.BYTES_PER_ELEMENT;\n        if (!Number.isInteger(length)) {\n            throw new MemoryError(`Length must be an integer value. Got ${length}.`);\n        }\n        const result = new clazz(length);\n        result.set(new clazz(this._memory.buffer, this.ptr + byteOffset, length));\n        return result;\n    }\n}\nexports.BaseMemoryRange = BaseMemoryRange;\nclass ReadonlyMemoryRange extends BaseMemoryRange {\n    constructor(memory, ptr, size) {\n        super(memory, ptr, size);\n    }\n    range(offset, size) {\n        if (offset + size > this.size) {\n            throw new MemoryError(`Memory access is out of bounds. Accessing [${offset}, ${size}], allocated[${this.ptr}, ${this.size}]`);\n        }\n        return new ReadonlyMemoryRange(this._memory, this.ptr + offset, size);\n    }\n}\nexports.ReadonlyMemoryRange = ReadonlyMemoryRange;\nclass MemoryRange extends BaseMemoryRange {\n    isAllocated;\n    constructor(memory, ptr, size, isPreallocated = false) {\n        super(memory, ptr, size);\n        this.isAllocated = isPreallocated;\n    }\n    free() {\n        if (typeof this._memory.free !== 'function') {\n            throw new MemoryError(`Memory doesn't support free`);\n        }\n        this._memory.free(this);\n    }\n    range(offset, size) {\n        if (offset + size > this.size) {\n            throw new MemoryError(`Memory access is out of bounds. Accessing [${offset}, ${size}], allocated[${this.ptr}, ${this.size}]`);\n        }\n        return new MemoryRange(this._memory, this.ptr + offset, size);\n    }\n    setUint8(offset, value) {\n        this.view.setUint8(offset, value);\n    }\n    setInt8(offset, value) {\n        this.view.setInt8(offset, value);\n    }\n    setUint16(offset, value) {\n        this.assertAlignment(offset, Alignment.halfWord);\n        this.view.setUint16(offset, value, true);\n    }\n    setInt16(offset, value) {\n        this.assertAlignment(offset, Alignment.halfWord);\n        this.view.setInt16(offset, value, true);\n    }\n    setUint32(offset, value) {\n        this.assertAlignment(offset, Alignment.word);\n        this.view.setUint32(offset, value, true);\n    }\n    setInt32(offset, value) {\n        this.assertAlignment(offset, Alignment.word);\n        this.view.setInt32(offset, value, true);\n    }\n    setUint64(offset, value) {\n        this.assertAlignment(offset, Alignment.doubleWord);\n        this.view.setBigUint64(offset, value, true);\n    }\n    setInt64(offset, value) {\n        this.assertAlignment(offset, Alignment.doubleWord);\n        this.view.setBigInt64(offset, value, true);\n    }\n    setFloat32(offset, value) {\n        this.assertAlignment(offset, Alignment.word);\n        this.view.setFloat32(offset, value, true);\n    }\n    setFloat64(offset, value) {\n        this.assertAlignment(offset, Alignment.doubleWord);\n        this.view.setFloat64(offset, value, true);\n    }\n    setPtr(offset, value) {\n        this.assertAlignment(offset, Alignment.word);\n        this.view.setUint32(offset, value, true);\n    }\n    getUint8View(offset, length) {\n        return this.getArrayView(offset, length, Uint8Array);\n    }\n    getInt8View(offset, length) {\n        return this.getArrayView(offset, length, Int8Array);\n    }\n    getUint16View(offset, length) {\n        return this.getArrayView(offset, length, Uint16Array);\n    }\n    getInt16View(offset, length) {\n        return this.getArrayView(offset, length, Int16Array);\n    }\n    getUint32View(offset, length) {\n        return this.getArrayView(offset, length, Uint32Array);\n    }\n    getInt32View(offset, length) {\n        return this.getArrayView(offset, length, Int32Array);\n    }\n    getUint64View(offset, length) {\n        return this.getBigArrayView(offset, length, BigUint64Array);\n    }\n    getInt64View(offset, length) {\n        return this.getBigArrayView(offset, length, BigInt64Array);\n    }\n    getFloat32View(offset, length) {\n        return this.getArrayView(offset, length, Float32Array);\n    }\n    getFloat64View(offset, length) {\n        return this.getArrayView(offset, length, Float64Array);\n    }\n    setUint8Array(offset, bytes) {\n        this.setArray(offset, bytes, Uint8Array);\n    }\n    setInt8Array(offset, bytes) {\n        this.setArray(offset, bytes, Int8Array);\n    }\n    setUint16Array(offset, bytes) {\n        this.setArray(offset, bytes, Uint16Array);\n    }\n    setInt16Array(offset, bytes) {\n        this.setArray(offset, bytes, Int16Array);\n    }\n    setUint32Array(offset, bytes) {\n        this.setArray(offset, bytes, Uint32Array);\n    }\n    setInt32Array(offset, bytes) {\n        this.setArray(offset, bytes, Int32Array);\n    }\n    setUint64Array(offset, bytes) {\n        this.setBigArray(offset, bytes, BigUint64Array);\n    }\n    setInt64Array(offset, bytes) {\n        this.setBigArray(offset, bytes, BigInt64Array);\n    }\n    setFloat32Array(offset, bytes) {\n        this.setArray(offset, bytes, Float32Array);\n    }\n    setFloat64Array(offset, bytes) {\n        this.setArray(offset, bytes, Float64Array);\n    }\n    getArrayView(byteOffset, length, clazz) {\n        length = length ?? (this.size - byteOffset) / clazz.BYTES_PER_ELEMENT;\n        if (!Number.isInteger(length)) {\n            throw new MemoryError(`Length must be an integer value. Got ${length}.`);\n        }\n        return new clazz(this._memory.buffer, this.ptr + byteOffset, length);\n    }\n    getBigArrayView(byteOffset, length, clazz) {\n        length = length ?? (this.size - byteOffset) / clazz.BYTES_PER_ELEMENT;\n        if (!Number.isInteger(length)) {\n            throw new MemoryError(`Length must be an integer value. Got ${length}.`);\n        }\n        return new clazz(this._memory.buffer, this.ptr + byteOffset, length);\n    }\n    setArray(byteOffset, bytes, clazz) {\n        new clazz(this._memory.buffer, this.ptr + byteOffset, bytes.length).set(bytes);\n    }\n    setBigArray(byteOffset, bytes, clazz) {\n        new clazz(this._memory.buffer, this.ptr + byteOffset, bytes.length).set(bytes);\n    }\n}\nexports.MemoryRange = MemoryRange;\n/**\n * A memory of size 0. Doesn't allow any kind of operation on it.\n */\nclass NullMemory {\n    id = 'b60336d2-c856-4767-af3b-f66e1ab6c507';\n    buffer = new ArrayBuffer(0);\n    alloc() {\n        throw new MemoryError('Cannot allocate memory on a null memory.');\n    }\n    realloc() {\n        throw new MemoryError('Cannot re-allocate memory on a null memory.');\n    }\n    preAllocated() {\n        throw new MemoryError('Cannot point to pre-allocate memory on a null memory.');\n    }\n    readonly() {\n        throw new MemoryError('Cannot point to readonly memory on a null memory.');\n    }\n    free() {\n        throw new MemoryError('Cannot free memory on a null memory.');\n    }\n}\nvar Memory;\n(function (Memory) {\n    Memory.Null = new NullMemory();\n    class Default {\n        id;\n        memory;\n        cabi_realloc;\n        constructor(exports, id) {\n            if (exports.memory === undefined || exports.cabi_realloc === undefined) {\n                throw new MemoryError('The exports object must contain a memory object and a cabi_realloc function.');\n            }\n            this.id = id ?? uuid.v4();\n            this.memory = exports.memory;\n            this.cabi_realloc = exports.cabi_realloc;\n        }\n        get buffer() {\n            return this.memory.buffer;\n        }\n        alloc(align, size) {\n            const ptr = this.cabi_realloc(0, 0, align, size);\n            return new MemoryRange(this, ptr, size);\n        }\n        realloc(range, newSize) {\n            const ptr = this.cabi_realloc(range.ptr, range.size, range.alignment, newSize);\n            return new MemoryRange(this, ptr, newSize);\n        }\n        preAllocated(ptr, size) {\n            return new MemoryRange(this, ptr, size);\n        }\n        readonly(ptr, size) {\n            return new ReadonlyMemoryRange(this, ptr, size);\n        }\n    }\n    Memory.Default = Default;\n})(Memory || (exports.Memory = Memory = {}));\nvar Options;\n(function (Options) {\n    function is(value) {\n        const candidate = value;\n        return candidate && typeof candidate.encoding === 'string' && (candidate.keepOption === undefined || typeof candidate.keepOption === 'boolean');\n    }\n    Options.is = is;\n})(Options || (exports.Options = Options = {}));\nvar FlatTypeKind;\n(function (FlatTypeKind) {\n    FlatTypeKind[\"i32\"] = \"i32\";\n    FlatTypeKind[\"i64\"] = \"i64\";\n    FlatTypeKind[\"f32\"] = \"f32\";\n    FlatTypeKind[\"f64\"] = \"f64\";\n})(FlatTypeKind || (exports.FlatTypeKind = FlatTypeKind = {}));\nvar $i32;\n(function ($i32) {\n    $i32.kind = FlatTypeKind.i32;\n    $i32.size = 4;\n    $i32.alignment = Alignment.word;\n    function load(memory, offset) {\n        return memory.getUint32(offset);\n    }\n    $i32.load = load;\n    function store(memory, offset, value) {\n        memory.setUint32(offset, value);\n    }\n    $i32.store = store;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, $i32.alignment);\n        src.assertAlignment(src_offset, $i32.alignment);\n        src.copyBytes(src_offset, $i32.size, dest, dest_offset);\n    }\n    $i32.copy = copy;\n})($i32 || ($i32 = {}));\nexports.i32 = $i32;\nvar $i64;\n(function ($i64) {\n    $i64.kind = FlatTypeKind.i64;\n    $i64.size = 8;\n    $i64.alignment = Alignment.doubleWord;\n    function load(memory, offset) {\n        return memory.getUint64(offset);\n    }\n    $i64.load = load;\n    function store(memory, offset, value) {\n        memory.setUint64(offset, value);\n    }\n    $i64.store = store;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, $i64.alignment);\n        src.assertAlignment(src_offset, $i64.alignment);\n        src.copyBytes(src_offset, $i64.size, dest, dest_offset);\n    }\n    $i64.copy = copy;\n})($i64 || ($i64 = {}));\nexports.i64 = $i64;\nvar $f32;\n(function ($f32) {\n    $f32.kind = FlatTypeKind.f32;\n    $f32.size = 4;\n    $f32.alignment = Alignment.word;\n    function load(memory, offset) {\n        return memory.getFloat32(offset);\n    }\n    $f32.load = load;\n    function store(memory, offset, value) {\n        memory.setFloat32(offset, value);\n    }\n    $f32.store = store;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, $f32.alignment);\n        src.assertAlignment(src_offset, $f32.alignment);\n        src.copyBytes(src_offset, $f32.size, dest, dest_offset);\n    }\n    $f32.copy = copy;\n})($f32 || ($f32 = {}));\nexports.f32 = $f32;\nvar $f64;\n(function ($f64) {\n    $f64.kind = FlatTypeKind.f64;\n    $f64.size = 8;\n    $f64.alignment = Alignment.doubleWord;\n    function load(memory, offset) {\n        return memory.getFloat64(offset);\n    }\n    $f64.load = load;\n    function store(memory, offset, value) {\n        memory.setFloat64(offset, value);\n    }\n    $f64.store = store;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, $f64.alignment);\n        src.assertAlignment(src_offset, $f64.alignment);\n        src.copyBytes(src_offset, $f64.size, dest, dest_offset);\n    }\n    $f64.copy = copy;\n})($f64 || ($f64 = {}));\nexports.f64 = $f64;\nclass FlatTuple {\n    types;\n    alignment;\n    size;\n    constructor(types) {\n        this.types = types;\n        this.alignment = FlatTuple.alignment(types);\n        this.size = FlatTuple.size(types, this.alignment);\n    }\n    load(memory, offset) {\n        memory.assertAlignment(offset, this.alignment);\n        const result = [];\n        for (const type of this.types) {\n            offset = align(offset, type.alignment);\n            result.push(type.load(memory, offset));\n            offset += type.size;\n        }\n        return result;\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memory, offset, values) {\n        memory.assertAlignment(offset, this.alignment);\n        for (const [index, type] of this.types.entries()) {\n            const value = values[index];\n            offset = align(offset, type.alignment);\n            type.store(memory, offset, value);\n            offset += type.size;\n        }\n    }\n    copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, this.alignment);\n        src.assertAlignment(src_offset, this.alignment);\n        src.copyBytes(src_offset, this.size, dest, dest_offset);\n    }\n    static alignment(types) {\n        let result = Alignment.byte;\n        for (const type of types) {\n            result = Math.max(result, type.alignment);\n        }\n        return result;\n    }\n    static size(types, tupleAlignment) {\n        let result = 0;\n        for (const type of types) {\n            result = align(result, type.alignment);\n            result += type.size;\n        }\n        return align(result, tupleAlignment);\n    }\n}\nexports.FlatTuple = FlatTuple;\nvar WasmTypes;\n(function (WasmTypes) {\n    const $32 = new DataView(new ArrayBuffer(4));\n    const $64 = new DataView(new ArrayBuffer(8));\n    function reinterpret_i32_as_f32(i32) {\n        $32.setInt32(0, i32, true);\n        return $32.getFloat32(0, true);\n    }\n    WasmTypes.reinterpret_i32_as_f32 = reinterpret_i32_as_f32;\n    function reinterpret_f32_as_i32(f32) {\n        $32.setFloat32(0, f32, true);\n        return $32.getInt32(0, true);\n    }\n    WasmTypes.reinterpret_f32_as_i32 = reinterpret_f32_as_i32;\n    function convert_i64_to_i32(i64) {\n        return BigInts.asNumber(i64);\n    }\n    WasmTypes.convert_i64_to_i32 = convert_i64_to_i32;\n    function convert_i32_to_i64(i32) {\n        return BigInt(i32);\n    }\n    WasmTypes.convert_i32_to_i64 = convert_i32_to_i64;\n    function reinterpret_i64_as_f32(i64) {\n        const i32 = convert_i64_to_i32(i64);\n        return reinterpret_i32_as_f32(i32);\n    }\n    WasmTypes.reinterpret_i64_as_f32 = reinterpret_i64_as_f32;\n    function reinterpret_f32_as_i64(f32) {\n        const i32 = reinterpret_f32_as_i32(f32);\n        return convert_i32_to_i64(i32);\n    }\n    WasmTypes.reinterpret_f32_as_i64 = reinterpret_f32_as_i64;\n    function reinterpret_i64_as_f64(i64) {\n        $64.setBigInt64(0, i64, true);\n        return $64.getFloat64(0, true);\n    }\n    WasmTypes.reinterpret_i64_as_f64 = reinterpret_i64_as_f64;\n    function reinterpret_f64_as_i64(f64) {\n        $64.setFloat64(0, f64, true);\n        return $64.getBigInt64(0, true);\n    }\n    WasmTypes.reinterpret_f64_as_i64 = reinterpret_f64_as_i64;\n})(WasmTypes || (WasmTypes = {}));\nclass CoerceValueIter {\n    values;\n    haveFlatTypes;\n    wantFlatTypes;\n    index;\n    constructor(values, haveFlatTypes, wantFlatTypes) {\n        this.values = values;\n        this.haveFlatTypes = haveFlatTypes;\n        this.wantFlatTypes = wantFlatTypes;\n        if (haveFlatTypes.length < wantFlatTypes.length) {\n            throw new ComponentModelTrap(`Invalid coercion: have ${haveFlatTypes.length} values, want ${wantFlatTypes.length} values`);\n        }\n        this.index = 0;\n    }\n    next() {\n        const value = this.values.next();\n        if (value.done) {\n            return value;\n        }\n        const haveType = this.haveFlatTypes[this.index];\n        const wantType = this.wantFlatTypes[this.index++];\n        if (haveType === $i32 && wantType === $f32) {\n            return { done: false, value: WasmTypes.reinterpret_i32_as_f32(value.value) };\n        }\n        else if (haveType === $i64 && wantType === $i32) {\n            return { done: false, value: WasmTypes.convert_i64_to_i32(value.value) };\n        }\n        else if (haveType === $i64 && wantType === $f32) {\n            return { done: false, value: WasmTypes.reinterpret_i64_as_f32(value.value) };\n        }\n        else if (haveType === $i64 && wantType === $f64) {\n            return { done: false, value: WasmTypes.reinterpret_i64_as_f64(value.value) };\n        }\n        else {\n            return value;\n        }\n    }\n}\nvar ComponentModelTypeKind;\n(function (ComponentModelTypeKind) {\n    ComponentModelTypeKind[\"bool\"] = \"bool\";\n    ComponentModelTypeKind[\"u8\"] = \"u8\";\n    ComponentModelTypeKind[\"u16\"] = \"u16\";\n    ComponentModelTypeKind[\"u32\"] = \"u32\";\n    ComponentModelTypeKind[\"u64\"] = \"u64\";\n    ComponentModelTypeKind[\"s8\"] = \"s8\";\n    ComponentModelTypeKind[\"s16\"] = \"s16\";\n    ComponentModelTypeKind[\"s32\"] = \"s32\";\n    ComponentModelTypeKind[\"s64\"] = \"s64\";\n    ComponentModelTypeKind[\"float32\"] = \"float32\";\n    ComponentModelTypeKind[\"float64\"] = \"float64\";\n    ComponentModelTypeKind[\"char\"] = \"char\";\n    ComponentModelTypeKind[\"string\"] = \"string\";\n    ComponentModelTypeKind[\"list\"] = \"list\";\n    ComponentModelTypeKind[\"record\"] = \"record\";\n    ComponentModelTypeKind[\"tuple\"] = \"tuple\";\n    ComponentModelTypeKind[\"variant\"] = \"variant\";\n    ComponentModelTypeKind[\"enum\"] = \"enum\";\n    ComponentModelTypeKind[\"flags\"] = \"flags\";\n    ComponentModelTypeKind[\"option\"] = \"option\";\n    ComponentModelTypeKind[\"result\"] = \"result\";\n    ComponentModelTypeKind[\"resource\"] = \"resource\";\n    ComponentModelTypeKind[\"resourceHandle\"] = \"resourceHandle\";\n    ComponentModelTypeKind[\"borrow\"] = \"borrow\";\n    ComponentModelTypeKind[\"own\"] = \"own\";\n})(ComponentModelTypeKind || (exports.ComponentModelTypeKind = ComponentModelTypeKind = {}));\nvar ComponentModelContext;\n(function (ComponentModelContext) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Options.is(candidate.options) && ResourceManagers.is(candidate.resources);\n    }\n    ComponentModelContext.is = is;\n})(ComponentModelContext || (exports.ComponentModelContext = ComponentModelContext = {}));\nvar ComponentModelType;\n(function (ComponentModelType) {\n    function satisfies(_value) {\n        // This is for pure Type checking.\n    }\n    ComponentModelType.satisfies = satisfies;\n})(ComponentModelType || (ComponentModelType = {}));\nclass ResultError extends Error {\n    cause;\n    constructor(message, cause) {\n        super(message, { cause: cause });\n        this.cause = cause;\n    }\n}\nexports.ResultError = ResultError;\nvar bool;\n(function (bool) {\n    bool.kind = ComponentModelTypeKind.bool;\n    bool.size = 1;\n    bool.alignment = Alignment.byte;\n    bool.flatTypes = [$i32];\n    function load(memory, offset) {\n        return memory.getUint8(offset) !== 0;\n    }\n    bool.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < 0) {\n            throw new ComponentModelTrap(`Invalid bool value ${value}`);\n        }\n        return value !== 0;\n    }\n    bool.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(bool.alignment, bool.size);\n    }\n    bool.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setUint8(offset, value ? 1 : 0);\n    }\n    bool.store = store;\n    function lowerFlat(result, _memory, value) {\n        result.push(value ? 1 : 0);\n    }\n    bool.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        src.copyBytes(src_offset, bool.size, dest, dest_offset);\n    }\n    bool.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    bool.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    bool.Error = Error;\n})(bool || (exports.bool = bool = {}));\nComponentModelType.satisfies(bool);\nvar u8;\n(function (u8) {\n    u8.kind = ComponentModelTypeKind.u8;\n    u8.size = 1;\n    u8.alignment = Alignment.byte;\n    u8.flatTypes = [$i32];\n    u8.LOW_VALUE = 0;\n    u8.HIGH_VALUE = 255;\n    function load(memory, offset) {\n        return memory.getUint8(offset);\n    }\n    u8.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < u8.LOW_VALUE || value > u8.HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid u8 value ${value}`);\n        }\n        return value;\n    }\n    u8.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(u8.alignment, u8.size);\n    }\n    u8.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setUint8(offset, value);\n    }\n    u8.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < u8.LOW_VALUE || value > u8.HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid u8 value ${value}`);\n        }\n        result.push(value);\n    }\n    u8.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        src.copyBytes(src_offset, u8.size, dest, dest_offset);\n    }\n    u8.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    u8.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    u8.Error = Error;\n})(u8 || (exports.u8 = u8 = {}));\nComponentModelType.satisfies(u8);\nvar u16;\n(function (u16) {\n    u16.kind = ComponentModelTypeKind.u16;\n    u16.size = 2;\n    u16.alignment = Alignment.halfWord;\n    u16.flatTypes = [$i32];\n    u16.LOW_VALUE = 0;\n    u16.HIGH_VALUE = 65535;\n    function load(memory, offset) {\n        return memory.getUint16(offset);\n    }\n    u16.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < u16.LOW_VALUE || value > u16.HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid u16 value ${value}`);\n        }\n        return value;\n    }\n    u16.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(u16.alignment, u16.size);\n    }\n    u16.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setUint16(offset, value);\n    }\n    u16.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < u16.LOW_VALUE || value > u16.HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid u16 value ${value}`);\n        }\n        result.push(value);\n    }\n    u16.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, u16.alignment);\n        src.assertAlignment(src_offset, u16.alignment);\n        src.copyBytes(src_offset, u16.size, dest, dest_offset);\n    }\n    u16.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    u16.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    u16.Error = Error;\n})(u16 || (exports.u16 = u16 = {}));\nComponentModelType.satisfies(u16);\nvar u32;\n(function (u32) {\n    u32.kind = ComponentModelTypeKind.u32;\n    u32.size = 4;\n    u32.alignment = Alignment.word;\n    u32.flatTypes = [$i32];\n    u32.LOW_VALUE = 0;\n    u32.HIGH_VALUE = 4294967295; // 2 ^ 32 - 1\n    function valid(value) {\n        return value >= u32.LOW_VALUE && value <= u32.HIGH_VALUE && Number.isInteger(value);\n    }\n    u32.valid = valid;\n    function load(memory, offset) {\n        return memory.getUint32(offset);\n    }\n    u32.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < u32.LOW_VALUE || value > u32.HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid u32 value ${value}`);\n        }\n        return value;\n    }\n    u32.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(u32.alignment, u32.size);\n    }\n    u32.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setUint32(offset, value);\n    }\n    u32.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < u32.LOW_VALUE || value > u32.HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid u32 value ${value}`);\n        }\n        result.push(value);\n    }\n    u32.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, u32.alignment);\n        src.assertAlignment(src_offset, u32.alignment);\n        src.copyBytes(src_offset, u32.size, dest, dest_offset);\n    }\n    u32.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    u32.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    u32.Error = Error;\n})(u32 || (exports.u32 = u32 = {}));\nComponentModelType.satisfies(u32);\nvar u64;\n(function (u64) {\n    u64.kind = ComponentModelTypeKind.u64;\n    u64.size = 8;\n    u64.alignment = Alignment.doubleWord;\n    u64.flatTypes = [$i64];\n    u64.LOW_VALUE = 0n;\n    u64.HIGH_VALUE = 18446744073709551615n; // 2 ^ 64 - 1\n    function load(memory, offset) {\n        return memory.getUint64(offset);\n    }\n    u64.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < u64.LOW_VALUE) {\n            throw new ComponentModelTrap(`Invalid u64 value ${value}`);\n        }\n        return value;\n    }\n    u64.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(u64.alignment, u64.size);\n    }\n    u64.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setUint64(offset, value);\n    }\n    u64.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < u64.LOW_VALUE) {\n            throw new ComponentModelTrap(`Invalid u64 value ${value}`);\n        }\n        result.push(value);\n    }\n    u64.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, u64.alignment);\n        src.assertAlignment(src_offset, u64.alignment);\n        src.copyBytes(src_offset, u64.size, dest, dest_offset);\n    }\n    u64.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    u64.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    u64.Error = Error;\n})(u64 || (exports.u64 = u64 = {}));\nComponentModelType.satisfies(u64);\nvar s8;\n(function (s8) {\n    s8.kind = ComponentModelTypeKind.s8;\n    s8.size = 1;\n    s8.alignment = Alignment.byte;\n    s8.flatTypes = [$i32];\n    const LOW_VALUE = -128;\n    const HIGH_VALUE = 127;\n    function load(memory, offset) {\n        return memory.getInt8(offset);\n    }\n    s8.load = load;\n    function liftFlat(_memory, values) {\n        let value = values.next().value;\n        if (!Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid s8 value ${value}`);\n        }\n        // All int values in the component model are transferred as unsigned\n        // values. So for signed values we need to convert them back.\n        if (value > HIGH_VALUE) {\n            value = value - 256;\n        }\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid s8 value ${value}`);\n        }\n        return value;\n    }\n    s8.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(s8.alignment, s8.size);\n    }\n    s8.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setInt8(offset, value);\n    }\n    s8.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < LOW_VALUE || value > HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid s8 value ${value}`);\n        }\n        result.push((value < 0) ? (value + 256) : value);\n    }\n    s8.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, s8.alignment);\n        src.assertAlignment(src_offset, s8.alignment);\n        src.copyBytes(src_offset, s8.size, dest, dest_offset);\n    }\n    s8.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    s8.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    s8.Error = Error;\n})(s8 || (exports.s8 = s8 = {}));\nComponentModelType.satisfies(s8);\nvar s16;\n(function (s16) {\n    s16.kind = ComponentModelTypeKind.s16;\n    s16.size = 2;\n    s16.alignment = Alignment.halfWord;\n    s16.flatTypes = [$i32];\n    const LOW_VALUE = -32768; // -2 ^ 15\n    const HIGH_VALUE = 32767; // 2 ^ 15 - 1\n    function load(memory, offset) {\n        return memory.getInt16(offset);\n    }\n    s16.load = load;\n    function liftFlat(_memory, values) {\n        let value = values.next().value;\n        if (!Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid s16 value ${value}`);\n        }\n        // See comment in s8.liftFlat\n        if (value > HIGH_VALUE) {\n            value = value - 65536;\n        }\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid s16 value ${value}`);\n        }\n        return value;\n    }\n    s16.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(s16.alignment, s16.size);\n    }\n    s16.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setInt16(offset, value);\n    }\n    s16.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < LOW_VALUE || value > HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid s16 value ${value}`);\n        }\n        result.push((value < 0) ? (value + 65536) : value);\n    }\n    s16.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, s16.alignment);\n        src.assertAlignment(src_offset, s16.alignment);\n        src.copyBytes(src_offset, s16.size, dest, dest_offset);\n    }\n    s16.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    s16.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    s16.Error = Error;\n})(s16 || (exports.s16 = s16 = {}));\nComponentModelType.satisfies(s16);\nvar s32;\n(function (s32) {\n    s32.kind = ComponentModelTypeKind.s32;\n    s32.size = 4;\n    s32.alignment = Alignment.word;\n    s32.flatTypes = [$i32];\n    const LOW_VALUE = -2147483648; // -2 ^ 31\n    const HIGH_VALUE = 2147483647; // 2 ^ 31 - 1\n    function load(memory, offset) {\n        return memory.getInt32(offset);\n    }\n    s32.load = load;\n    function liftFlat(_memory, values) {\n        let value = values.next().value;\n        if (!Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid s32 value ${value}`);\n        }\n        // See comment in s8.liftFlat\n        if (value > HIGH_VALUE) {\n            value = value - 4294967296;\n        }\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid s32 value ${value}`);\n        }\n        return value;\n    }\n    s32.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(s32.alignment, s32.size);\n    }\n    s32.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setInt32(offset, value);\n    }\n    s32.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < LOW_VALUE || value > HIGH_VALUE || !Number.isInteger(value)) {\n            throw new ComponentModelTrap(`Invalid s32 value ${value}`);\n        }\n        result.push((value < 0) ? (value + 4294967296) : value);\n    }\n    s32.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, s32.alignment);\n        src.assertAlignment(src_offset, s32.alignment);\n        src.copyBytes(src_offset, s32.size, dest, dest_offset);\n    }\n    s32.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    s32.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    s32.Error = Error;\n})(s32 || (exports.s32 = s32 = {}));\nComponentModelType.satisfies(s32);\nvar s64;\n(function (s64) {\n    s64.kind = ComponentModelTypeKind.s64;\n    s64.size = 8;\n    s64.alignment = Alignment.doubleWord;\n    s64.flatTypes = [$i64];\n    const LOW_VALUE = -9223372036854775808n; // -2 ^ 63\n    const HIGH_VALUE = 9223372036854775807n; // 2 ^ 63 - 1\n    function load(memory, offset) {\n        return memory.getInt64(offset);\n    }\n    s64.load = load;\n    function liftFlat(_memory, values) {\n        let value = values.next().value;\n        if (typeof value !== 'bigint') {\n            throw new ComponentModelTrap(`Invalid s64 value ${value}`);\n        }\n        // See comment in s8.liftFlat\n        if (value > HIGH_VALUE) {\n            value = value - 18446744073709551616n;\n        }\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid s64 value ${value}`);\n        }\n        return value;\n    }\n    s64.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(s64.alignment, s64.size);\n    }\n    s64.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setInt64(offset, value);\n    }\n    s64.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid s64 value ${value}`);\n        }\n        result.push((value < 0) ? (value + 18446744073709551616n) : value);\n    }\n    s64.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, s64.alignment);\n        src.assertAlignment(src_offset, s64.alignment);\n        src.copyBytes(src_offset, s64.size, dest, dest_offset);\n    }\n    s64.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    s64.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    s64.Error = Error;\n})(s64 || (exports.s64 = s64 = {}));\nComponentModelType.satisfies(s64);\nvar float32;\n(function (float32) {\n    float32.kind = ComponentModelTypeKind.float32;\n    float32.size = 4;\n    float32.alignment = Alignment.word;\n    float32.flatTypes = [$f32];\n    const LOW_VALUE = -3.4028234663852886e+38;\n    const HIGH_VALUE = 3.4028234663852886e+38;\n    const NAN = 0x7fc00000;\n    function load(memory, offset) {\n        return memory.getFloat32(offset);\n    }\n    float32.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid float32 value ${value}`);\n        }\n        return value === NAN ? Number.NaN : value;\n    }\n    float32.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(float32.alignment, float32.size);\n    }\n    float32.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setFloat32(offset, value);\n    }\n    float32.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid float32 value ${value}`);\n        }\n        result.push(Number.isNaN(value) ? NAN : value);\n    }\n    float32.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, float32.alignment);\n        src.assertAlignment(src_offset, float32.alignment);\n        src.copyBytes(src_offset, float32.size, dest, dest_offset);\n    }\n    float32.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    float32.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    float32.Error = Error;\n})(float32 || (exports.float32 = float32 = {}));\nComponentModelType.satisfies(float32);\nvar float64;\n(function (float64) {\n    float64.kind = ComponentModelTypeKind.float64;\n    float64.size = 8;\n    float64.alignment = Alignment.doubleWord;\n    float64.flatTypes = [$f64];\n    const LOW_VALUE = -1 * Number.MAX_VALUE;\n    const HIGH_VALUE = Number.MAX_VALUE;\n    const NAN = 0x7ff8000000000000;\n    function load(memory, offset) {\n        return memory.getFloat64(offset);\n    }\n    float64.load = load;\n    function liftFlat(_memory, values) {\n        const value = values.next().value;\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid float64 value ${value}`);\n        }\n        return value === NAN ? Number.NaN : value;\n    }\n    float64.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(float64.alignment, float64.size);\n    }\n    float64.alloc = alloc;\n    function store(memory, offset, value) {\n        memory.setFloat64(offset, value);\n    }\n    float64.store = store;\n    function lowerFlat(result, _memory, value) {\n        if (value < LOW_VALUE || value > HIGH_VALUE) {\n            throw new ComponentModelTrap(`Invalid float64 value ${value}`);\n        }\n        result.push(Number.isNaN(value) ? NAN : value);\n    }\n    float64.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, float64.alignment);\n        src.assertAlignment(src_offset, float64.alignment);\n        src.copyBytes(src_offset, float64.size, dest, dest_offset);\n    }\n    float64.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    float64.copyFlat = copyFlat;\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${cause}`, cause);\n        }\n    }\n    float64.Error = Error;\n})(float64 || (exports.float64 = float64 = {}));\nComponentModelType.satisfies(float64);\nexports.byte = {\n    kind: u8.kind,\n    size: u8.size,\n    alignment: u8.alignment,\n    flatTypes: u8.flatTypes,\n    load: u8.load,\n    liftFlat: u8.liftFlat,\n    alloc: u8.alloc,\n    store: u8.store,\n    lowerFlat: u8.lowerFlat,\n    copy: u8.copy,\n    copyFlat: u8.copyFlat\n};\nexports.size = {\n    kind: u32.kind,\n    size: u32.size,\n    alignment: u32.alignment,\n    flatTypes: u32.flatTypes,\n    load: u32.load,\n    liftFlat: u32.liftFlat,\n    alloc: u32.alloc,\n    store: u32.store,\n    lowerFlat: u32.lowerFlat,\n    copy: u32.copy,\n    copyFlat: u32.copyFlat\n};\nexports.ptr = {\n    kind: u32.kind,\n    size: u32.size,\n    alignment: u32.alignment,\n    flatTypes: u32.flatTypes,\n    load: u32.load,\n    liftFlat: u32.liftFlat,\n    alloc: u32.alloc,\n    store: u32.store,\n    lowerFlat: u32.lowerFlat,\n    copy: u32.copy,\n    copyFlat: u32.copyFlat\n};\nvar char;\n(function (char) {\n    char.kind = ComponentModelTypeKind.char;\n    char.size = 4;\n    char.alignment = Alignment.word;\n    char.flatTypes = [$i32];\n    function load(memory, offset, _context) {\n        return fromCodePoint(u32.load(memory, offset));\n    }\n    char.load = load;\n    function liftFlat(memory, values, _context) {\n        return fromCodePoint(u32.liftFlat(memory, values));\n    }\n    char.liftFlat = liftFlat;\n    function alloc(memory) {\n        return u32.alloc(memory);\n    }\n    char.alloc = alloc;\n    function store(memory, offset, value, _context) {\n        u32.store(memory, offset, asCodePoint(value));\n    }\n    char.store = store;\n    function lowerFlat(result, memory, value, _context) {\n        u32.lowerFlat(result, memory, asCodePoint(value));\n    }\n    char.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, char.alignment);\n        src.assertAlignment(src_offset, char.alignment);\n        src.copyBytes(src_offset, char.size, dest, dest_offset);\n    }\n    char.copy = copy;\n    function copyFlat(result, _dest, values, _src) {\n        result.push(values.next().value);\n    }\n    char.copyFlat = copyFlat;\n    function fromCodePoint(code) {\n        if (code >= 0x110000 || (0xD800 <= code && code <= 0xDFFF)) {\n            throw new ComponentModelTrap('Invalid code point');\n        }\n        return String.fromCodePoint(code);\n    }\n    function asCodePoint(str) {\n        if (str.length !== 1) {\n            throw new ComponentModelTrap('String length must be 1');\n        }\n        const code = str.codePointAt(0);\n        if (!(code <= 0xD7FF || (0xD800 <= code && code <= 0x10FFFF))) {\n            throw new ComponentModelTrap('Invalid code point');\n        }\n        return code;\n    }\n    class Error extends ResultError {\n        constructor(value) {\n            super(value, `Error value: ${value}`);\n        }\n    }\n    char.Error = Error;\n})(char || (exports.char = char = {}));\nComponentModelType.satisfies(char);\nvar wstring;\n(function (wstring) {\n    const offsets = {\n        data: 0,\n        codeUnits: 4\n    };\n    wstring.kind = ComponentModelTypeKind.string;\n    wstring.size = 8;\n    wstring.alignment = Alignment.word;\n    wstring.flatTypes = [$i32, $i32];\n    function load(memRange, offset, context) {\n        const dataPtr = memRange.getUint32(offset + offsets.data);\n        const codeUnits = memRange.getUint32(offset + offsets.codeUnits);\n        return loadFromRange(memRange.memory, dataPtr, codeUnits, context.options);\n    }\n    wstring.load = load;\n    function liftFlat(memory, values, context) {\n        const dataPtr = values.next().value;\n        const codeUnits = values.next().value;\n        return loadFromRange(memory, dataPtr, codeUnits, context.options);\n    }\n    wstring.liftFlat = liftFlat;\n    function alloc(memory) {\n        return memory.alloc(wstring.alignment, wstring.size);\n    }\n    wstring.alloc = alloc;\n    function store(memory, offset, str, context) {\n        const [ptr, codeUnits] = storeIntoRange(memory.memory, str, context.options);\n        memory.setUint32(offset + offsets.data, ptr);\n        memory.setUint32(offset + offsets.codeUnits, codeUnits);\n    }\n    wstring.store = store;\n    function lowerFlat(result, memory, str, context) {\n        result.push(...storeIntoRange(memory, str, context.options));\n    }\n    wstring.lowerFlat = lowerFlat;\n    function copy(dest, dest_offset, src, src_offset, context) {\n        dest.assertAlignment(dest_offset, wstring.alignment);\n        src.assertAlignment(src_offset, wstring.alignment);\n        // Copy the actual string data\n        const data = src.getUint32(src_offset + offsets.data);\n        const codeUnits = src.getUint32(src_offset + offsets.codeUnits);\n        const [alignment, byteLength] = getAlignmentAndByteLength(codeUnits, context.options);\n        const srcReader = src.memory.readonly(data, byteLength);\n        const destWriter = dest.memory.alloc(alignment, byteLength);\n        srcReader.copyBytes(0, byteLength, destWriter, 0);\n        // Store the new data pointer and code units\n        dest.setUint32(dest_offset + offsets.data, destWriter.ptr);\n        dest.setUint32(dest_offset + offsets.codeUnits, codeUnits);\n    }\n    wstring.copy = copy;\n    function copyFlat(result, dest, values, src, context) {\n        const data = values.next().value;\n        const codeUnits = values.next().value;\n        // Copy the actual string data\n        const [alignment, byteLength] = getAlignmentAndByteLength(codeUnits, context.options);\n        const srcReader = src.readonly(data, byteLength);\n        const destWriter = dest.alloc(alignment, byteLength);\n        srcReader.copyBytes(0, byteLength, destWriter, 0);\n        // Push new ptr and codeUnits\n        result.push(destWriter.ptr, codeUnits);\n    }\n    wstring.copyFlat = copyFlat;\n    function getAlignmentAndByteLength(codeUnits, options) {\n        const encoding = options.encoding;\n        if (encoding === 'latin1+utf-16') {\n            throw new ComponentModelTrap('latin1+utf-16 encoding not yet supported');\n        }\n        if (encoding === 'utf-8') {\n            return [u8.alignment, codeUnits];\n        }\n        else if (encoding === 'utf-16') {\n            return [u16.alignment, codeUnits * 2];\n        }\n        else {\n            throw new ComponentModelTrap('Unsupported encoding');\n        }\n    }\n    wstring.getAlignmentAndByteLength = getAlignmentAndByteLength;\n    function loadFromRange(memory, data, codeUnits, options) {\n        const encoding = options.encoding;\n        if (encoding === 'latin1+utf-16') {\n            throw new ComponentModelTrap('latin1+utf-16 encoding not yet supported');\n        }\n        if (encoding === 'utf-8') {\n            const byteLength = codeUnits;\n            const reader = memory.readonly(data, byteLength);\n            return utf8Decoder.decode(reader.getUint8Array(0, byteLength));\n        }\n        else if (encoding === 'utf-16') {\n            const reader = memory.readonly(data, codeUnits * 2);\n            return String.fromCharCode(...reader.getUint16Array(data, codeUnits));\n        }\n        else {\n            throw new ComponentModelTrap('Unsupported encoding');\n        }\n    }\n    function storeIntoRange(memory, str, options) {\n        const { encoding } = options;\n        if (encoding === 'latin1+utf-16') {\n            throw new ComponentModelTrap('latin1+utf-16 encoding not yet supported');\n        }\n        if (encoding === 'utf-8') {\n            const data = utf8Encoder.encode(str);\n            const writer = memory.alloc(u8.alignment, data.length);\n            writer.setUint8Array(0, data);\n            return [writer.ptr, data.length];\n        }\n        else if (encoding === 'utf-16') {\n            const writer = memory.alloc(u16.alignment, str.length * 2);\n            const data = writer.getUint16View(0);\n            for (let i = 0; i < str.length; i++) {\n                data[i] = str.charCodeAt(i);\n            }\n            return [writer.ptr, data.length];\n        }\n        else {\n            throw new ComponentModelTrap('Unsupported encoding');\n        }\n    }\n    class Error extends ResultError {\n        constructor(value) {\n            super(value, `Error value: ${value}`);\n        }\n    }\n    wstring.Error = Error;\n})(wstring || (exports.wstring = wstring = {}));\nComponentModelType.satisfies(wstring);\nclass ListType {\n    static offsets = {\n        data: 0,\n        length: 4\n    };\n    elementType;\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    constructor(elementType) {\n        this.elementType = elementType;\n        this.kind = ComponentModelTypeKind.list;\n        this.size = 8;\n        this.alignment = Alignment.word;\n        this.flatTypes = [$i32, $i32];\n    }\n    load(memRange, offset, context) {\n        const offsets = ListType.offsets;\n        const dataPtr = memRange.getUint32(offset + offsets.data);\n        const length = memRange.getUint32(offset + offsets.length);\n        return this.loadFromRange(memRange.memory.readonly(dataPtr, length * this.elementType.size), length, context);\n    }\n    liftFlat(memory, values, context) {\n        const dataPtr = values.next().value;\n        const length = values.next().value;\n        return this.loadFromRange(memory.readonly(dataPtr, length * this.elementType.size), length, context);\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memRange, offset, values, context) {\n        const elementMemory = memRange.memory.alloc(this.elementType.alignment, this.elementType.size * values.length);\n        this.storeIntoRange(elementMemory, values, context);\n        const offsets = ListType.offsets;\n        memRange.setUint32(offset + offsets.data, elementMemory.ptr);\n        memRange.setUint32(offset + offsets.length, values.length);\n    }\n    lowerFlat(result, memory, values, context) {\n        const elementMemory = memory.alloc(this.elementType.alignment, this.elementType.size * values.length);\n        this.storeIntoRange(elementMemory, values, context);\n        result.push(elementMemory.ptr, values.length);\n    }\n    copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, this.alignment);\n        src.assertAlignment(src_offset, this.alignment);\n        const offsets = ListType.offsets;\n        const data = src.getUint32(src_offset + offsets.data);\n        const length = src.getUint32(src_offset + offsets.length);\n        const byteLength = length * this.elementType.size;\n        const srcReader = src.memory.readonly(data, byteLength);\n        const destWriter = dest.memory.alloc(this.elementType.alignment, byteLength);\n        srcReader.copyBytes(0, byteLength, destWriter, 0);\n        dest.setUint32(dest_offset + offsets.data, destWriter.ptr);\n        dest.setUint32(dest_offset + offsets.length, length);\n    }\n    copyFlat(result, dest, values, src, _context) {\n        const data = values.next().value;\n        const length = values.next().value;\n        const byteLength = length * this.elementType.size;\n        const srcReader = src.readonly(data, byteLength);\n        const destWriter = dest.alloc(this.elementType.alignment, byteLength);\n        srcReader.copyBytes(0, byteLength, destWriter, 0);\n        result.push(destWriter.ptr, length);\n    }\n    loadFromRange(memory, length, context) {\n        const result = [];\n        let offset = 0;\n        for (let i = 0; i < length; i++) {\n            result.push(this.elementType.load(memory, offset, context));\n            offset += this.elementType.size;\n        }\n        return result;\n    }\n    storeIntoRange(memory, values, context) {\n        let offset = 0;\n        for (const item of values) {\n            this.elementType.store(memory, offset, item, context);\n            offset += this.elementType.size;\n        }\n    }\n}\nexports.ListType = ListType;\nvar list;\n(function (list) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    list.Error = Error;\n})(list || (exports.list = list = {}));\nclass TypeArrayType {\n    static offsets = {\n        data: 0,\n        length: 4\n    };\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    elementType;\n    constructor(elementType) {\n        this.kind = ComponentModelTypeKind.list;\n        this.size = 8;\n        this.alignment = 4;\n        this.flatTypes = [$i32, $i32];\n        this.elementType = elementType;\n    }\n    load(memRange, offset) {\n        const offsets = TypeArrayType.offsets;\n        const dataPtr = memRange.getUint32(offset + offsets.data);\n        const length = memRange.getUint32(offset + offsets.length);\n        return this.loadFromRange(memRange.memory.readonly(dataPtr, length * this.elementType.size), length);\n    }\n    liftFlat(memory, values) {\n        const dataPtr = values.next().value;\n        const length = values.next().value;\n        return this.loadFromRange(memory.readonly(dataPtr, length * this.elementType.size), length);\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memRange, offset, value) {\n        const writer = memRange.memory.alloc(this.elementType.alignment, value.byteLength);\n        this.storeIntoRange(writer, value);\n        const offsets = TypeArrayType.offsets;\n        memRange.setUint32(offset + offsets.data, writer.ptr);\n        memRange.setUint32(offset + offsets.length, value.length);\n    }\n    lowerFlat(result, memory, value) {\n        const writer = memory.alloc(this.elementType.alignment, value.byteLength);\n        this.storeIntoRange(writer, value);\n        result.push(writer.ptr, value.length);\n    }\n    copy(dest, dest_offset, src, src_offset) {\n        dest.assertAlignment(dest_offset, this.alignment);\n        src.assertAlignment(src_offset, this.alignment);\n        const offsets = TypeArrayType.offsets;\n        src.copyBytes(src_offset, this.size, dest, dest_offset);\n        const data = src.getUint32(src_offset + offsets.data);\n        const byteLength = src.getUint32(src_offset + offsets.length) * this.elementType.size;\n        const srcReader = src.memory.readonly(data, byteLength);\n        const destWriter = dest.memory.alloc(this.elementType.alignment, byteLength);\n        srcReader.copyBytes(0, byteLength, destWriter, 0);\n    }\n    copyFlat(result, dest, values, src, _context) {\n        const data = values.next().value;\n        const length = values.next().value;\n        const byteLength = length * this.elementType.size;\n        const srcReader = src.readonly(data, byteLength);\n        const destWriter = dest.alloc(this.elementType.alignment, byteLength);\n        srcReader.copyBytes(0, byteLength, destWriter, 0);\n        result.push(destWriter.ptr, length);\n    }\n}\nclass Int8ArrayType extends TypeArrayType {\n    constructor() {\n        super(s8);\n    }\n    loadFromRange(memory, length) {\n        return memory.getInt8Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setInt8Array(0, value);\n    }\n}\nexports.Int8ArrayType = Int8ArrayType;\n(function (Int8ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Int8ArrayType.Error = Error;\n})(Int8ArrayType || (exports.Int8ArrayType = Int8ArrayType = {}));\nclass Int16ArrayType extends TypeArrayType {\n    constructor() {\n        super(s16);\n    }\n    loadFromRange(memory, length) {\n        return memory.getInt16Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setInt16Array(0, value);\n    }\n}\nexports.Int16ArrayType = Int16ArrayType;\n(function (Int16ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Int16ArrayType.Error = Error;\n})(Int16ArrayType || (exports.Int16ArrayType = Int16ArrayType = {}));\nclass Int32ArrayType extends TypeArrayType {\n    constructor() {\n        super(s32);\n    }\n    loadFromRange(memory, length) {\n        return memory.getInt32Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setInt32Array(0, value);\n    }\n}\nexports.Int32ArrayType = Int32ArrayType;\n(function (Int32ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Int32ArrayType.Error = Error;\n})(Int32ArrayType || (exports.Int32ArrayType = Int32ArrayType = {}));\nclass BigInt64ArrayType extends TypeArrayType {\n    constructor() {\n        super(s64);\n    }\n    loadFromRange(memory, length) {\n        return memory.getInt64Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setInt64Array(0, value);\n    }\n}\nexports.BigInt64ArrayType = BigInt64ArrayType;\n(function (BigInt64ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    BigInt64ArrayType.Error = Error;\n})(BigInt64ArrayType || (exports.BigInt64ArrayType = BigInt64ArrayType = {}));\nclass Uint8ArrayType extends TypeArrayType {\n    constructor() {\n        super(u8);\n    }\n    loadFromRange(memory, length) {\n        return memory.getUint8Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setUint8Array(0, value);\n    }\n}\nexports.Uint8ArrayType = Uint8ArrayType;\n(function (Uint8ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Uint8ArrayType.Error = Error;\n})(Uint8ArrayType || (exports.Uint8ArrayType = Uint8ArrayType = {}));\nclass Uint16ArrayType extends TypeArrayType {\n    constructor() {\n        super(u16);\n    }\n    loadFromRange(memory, length) {\n        return memory.getUint16Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setUint16Array(0, value);\n    }\n}\nexports.Uint16ArrayType = Uint16ArrayType;\n(function (Uint16ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Uint16ArrayType.Error = Error;\n})(Uint16ArrayType || (exports.Uint16ArrayType = Uint16ArrayType = {}));\nclass Uint32ArrayType extends TypeArrayType {\n    constructor() {\n        super(u32);\n    }\n    loadFromRange(memory, length) {\n        return memory.getUint32Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setUint32Array(0, value);\n    }\n}\nexports.Uint32ArrayType = Uint32ArrayType;\n(function (Uint32ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Uint32ArrayType.Error = Error;\n})(Uint32ArrayType || (exports.Uint32ArrayType = Uint32ArrayType = {}));\nclass BigUint64ArrayType extends TypeArrayType {\n    constructor() {\n        super(u64);\n    }\n    loadFromRange(memory, length) {\n        return memory.getUint64Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setUint64Array(0, value);\n    }\n}\nexports.BigUint64ArrayType = BigUint64ArrayType;\n(function (BigUint64ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    BigUint64ArrayType.Error = Error;\n})(BigUint64ArrayType || (exports.BigUint64ArrayType = BigUint64ArrayType = {}));\nclass Float32ArrayType extends TypeArrayType {\n    constructor() {\n        super(float32);\n    }\n    loadFromRange(memory, length) {\n        return memory.getFloat32Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setFloat32Array(0, value);\n    }\n}\nexports.Float32ArrayType = Float32ArrayType;\n(function (Float32ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Float32ArrayType.Error = Error;\n})(Float32ArrayType || (exports.Float32ArrayType = Float32ArrayType = {}));\nclass Float64ArrayType extends TypeArrayType {\n    constructor() {\n        super(float64);\n    }\n    loadFromRange(memory, length) {\n        return memory.getFloat64Array(0, length);\n    }\n    storeIntoRange(memory, value) {\n        memory.setFloat64Array(0, value);\n    }\n}\nexports.Float64ArrayType = Float64ArrayType;\n(function (Float64ArrayType) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    Float64ArrayType.Error = Error;\n})(Float64ArrayType || (exports.Float64ArrayType = Float64ArrayType = {}));\nclass BaseRecordType {\n    fields;\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    constructor(fields, kind) {\n        this.fields = fields;\n        this.kind = kind;\n        this.alignment = BaseRecordType.alignment(fields);\n        this.size = BaseRecordType.size(fields, this.alignment);\n        this.flatTypes = BaseRecordType.flatTypes(fields);\n    }\n    load(memory, offset, context) {\n        memory.assertAlignment(offset, this.alignment);\n        const result = [];\n        for (const field of this.fields) {\n            offset = align(offset, field.type.alignment);\n            result.push(field.type.load(memory, offset, context));\n            offset += field.type.size;\n        }\n        return this.create(this.fields, result);\n    }\n    liftFlat(memory, values, context) {\n        const result = [];\n        for (const field of this.fields) {\n            result.push(field.type.liftFlat(memory, values, context));\n        }\n        return this.create(this.fields, result);\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memory, offset, record, context) {\n        memory.assertAlignment(offset, this.alignment);\n        const values = this.elements(record, this.fields);\n        for (let i = 0; i < this.fields.length; i++) {\n            const field = this.fields[i];\n            const value = values[i];\n            offset = align(offset, field.type.alignment);\n            field.type.store(memory, offset, value, context);\n            offset += field.type.size;\n        }\n    }\n    lowerFlat(result, memory, record, context) {\n        const values = this.elements(record, this.fields);\n        for (let i = 0; i < this.fields.length; i++) {\n            const field = this.fields[i];\n            const value = values[i];\n            field.type.lowerFlat(result, memory, value, context);\n        }\n    }\n    copy(dest, dest_offset, src, src_offset, context) {\n        for (const field of this.fields) {\n            dest_offset = align(dest_offset, field.type.alignment);\n            src_offset = align(src_offset, field.type.alignment);\n            field.type.copy(dest, dest_offset, src, src_offset, context);\n            dest_offset += field.type.size;\n            src_offset += field.type.size;\n        }\n    }\n    copyFlat(result, dest, values, src, context) {\n        for (const field of this.fields) {\n            field.type.copyFlat(result, dest, values, src, context);\n        }\n    }\n    static size(fields, recordAlignment) {\n        let result = 0;\n        for (const field of fields) {\n            result = align(result, field.type.alignment);\n            result += field.type.size;\n        }\n        return align(result, recordAlignment);\n    }\n    static alignment(fields) {\n        let result = 1;\n        for (const field of fields) {\n            result = Math.max(result, field.type.alignment);\n        }\n        return result;\n    }\n    static flatTypes(fields) {\n        const result = [];\n        for (const field of fields) {\n            result.push(...field.type.flatTypes);\n        }\n        return result;\n    }\n}\nvar RecordField;\n(function (RecordField) {\n    function create(name, type) {\n        return { name, type };\n    }\n    RecordField.create = create;\n})(RecordField || (RecordField = {}));\nclass RecordType extends BaseRecordType {\n    constructor(fields) {\n        const recordFields = [];\n        for (const [name, type] of fields) {\n            recordFields.push(RecordField.create(name, type));\n        }\n        super(recordFields, ComponentModelTypeKind.record);\n    }\n    create(fields, values) {\n        const result = {};\n        for (let i = 0; i < fields.length; i++) {\n            const field = fields[i];\n            const value = values[i];\n            result[field.name] = value;\n        }\n        return result;\n    }\n    elements(record, fields) {\n        const result = [];\n        for (const field of fields) {\n            const value = record[field.name];\n            result.push(value);\n        }\n        return result;\n    }\n}\nexports.RecordType = RecordType;\nvar TupleField;\n(function (TupleField) {\n    function create(type) {\n        return { type };\n    }\n    TupleField.create = create;\n})(TupleField || (TupleField = {}));\nclass TupleType extends BaseRecordType {\n    constructor(fields) {\n        const tupleFields = [];\n        for (const type of fields) {\n            tupleFields.push(TupleField.create(type));\n        }\n        super(tupleFields, ComponentModelTypeKind.tuple);\n    }\n    create(_fields, values) {\n        return values;\n    }\n    elements(record, _fields) {\n        return record;\n    }\n}\nexports.TupleType = TupleType;\nvar tuple;\n(function (tuple) {\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    tuple.Error = Error;\n})(tuple || (exports.tuple = tuple = {}));\nclass FlagsType {\n    type;\n    arraySize;\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    constructor(numberOfFlags) {\n        this.kind = ComponentModelTypeKind.flags;\n        this.size = FlagsType.size(numberOfFlags);\n        this.alignment = FlagsType.alignment(numberOfFlags);\n        this.flatTypes = FlagsType.flatTypes(numberOfFlags);\n        this.type = FlagsType.getType(numberOfFlags);\n        this.arraySize = FlagsType.num32Flags(numberOfFlags);\n    }\n    load(memory, offset, context) {\n        return this.type === undefined ? 0 : this.loadFrom(this.type.load(memory, offset, context));\n    }\n    liftFlat(memory, values, context) {\n        return this.type === undefined ? 0 : this.loadFrom(this.type.liftFlat(memory, values, context));\n    }\n    loadFrom(value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        else {\n            let result = 0n;\n            for (let f = 0, i = value.length - 1; f < value.length; f++, i--) {\n                const bits = value[i];\n                result = result | (BigInt(bits) << BigInt(f * 32));\n            }\n            return result;\n        }\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memory, offset, flags, context) {\n        if (this.type !== undefined) {\n            this.type.store(memory, offset, this.storeInto(flags), context);\n        }\n    }\n    lowerFlat(result, _memory, flags, context) {\n        if (this.type !== undefined) {\n            this.type.lowerFlat(result, _memory, this.storeInto(flags), context);\n        }\n    }\n    copy(dest, dest_offset, src, src_offset, context) {\n        if (this.type !== undefined) {\n            this.type.copy(dest, dest_offset, src, src_offset, context);\n        }\n    }\n    copyFlat(result, dest, values, src, context) {\n        if (this.type !== undefined) {\n            this.type.copyFlat(result, dest, values, src, context);\n        }\n    }\n    storeInto(value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        else {\n            const result = new Array(this.arraySize).fill(0);\n            for (let f = 0, i = result.length - 1; f < result.length; f++, i--) {\n                const bits = Number((value >> BigInt(f * 32)) & BigInt(0xffffffff));\n                result[i] = bits;\n            }\n            return result;\n        }\n    }\n    static size(numberOfFlags) {\n        if (numberOfFlags === 0) {\n            return 0;\n        }\n        else if (numberOfFlags <= 8) {\n            return 1;\n        }\n        else if (numberOfFlags <= 16) {\n            return 2;\n        }\n        else {\n            return 4 * this.num32Flags(numberOfFlags);\n        }\n    }\n    static alignment(numberOfFlags) {\n        if (numberOfFlags <= 8) {\n            return 1;\n        }\n        else if (numberOfFlags <= 16) {\n            return 2;\n        }\n        else {\n            return 4;\n        }\n    }\n    static getType(numberOfFlags) {\n        if (numberOfFlags === 0) {\n            return undefined;\n        }\n        else if (numberOfFlags <= 8) {\n            return u8;\n        }\n        else if (numberOfFlags <= 16) {\n            return u16;\n        }\n        else if (numberOfFlags <= 32) {\n            return u32;\n        }\n        else {\n            return new TupleType(new Array(this.num32Flags(numberOfFlags)).fill(u32));\n        }\n    }\n    static flatTypes(numberOfFlags) {\n        return new Array(this.num32Flags(numberOfFlags)).fill($i32);\n    }\n    static num32Flags(numberOfFlags) {\n        return Math.ceil(numberOfFlags / 32);\n    }\n}\nexports.FlagsType = FlagsType;\nvar VariantCase;\n(function (VariantCase) {\n    function create(index, tag, type) {\n        return { index, tag, type, wantFlatTypes: type !== undefined ? [] : undefined };\n    }\n    VariantCase.create = create;\n})(VariantCase || (VariantCase = {}));\nclass VariantType {\n    cases;\n    case2Index;\n    ctor;\n    discriminantType;\n    maxCaseAlignment;\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    constructor(variants, ctor, kind = ComponentModelTypeKind.variant) {\n        const cases = [];\n        this.case2Index = new Map();\n        for (let i = 0; i < variants.length; i++) {\n            const type = variants[i][1];\n            const name = variants[i][0];\n            this.case2Index.set(name, i);\n            cases.push(VariantCase.create(i, name, type));\n        }\n        this.cases = cases;\n        this.ctor = ctor;\n        this.discriminantType = VariantType.discriminantType(cases.length);\n        this.maxCaseAlignment = VariantType.maxCaseAlignment(cases);\n        this.kind = kind;\n        this.size = VariantType.size(this.discriminantType, cases);\n        this.alignment = VariantType.alignment(this.discriminantType, cases);\n        this.flatTypes = VariantType.flatTypes(this.discriminantType, cases);\n    }\n    load(memory, offset, context) {\n        const caseIndex = this.discriminantType.load(memory, offset);\n        const caseVariant = this.cases[caseIndex];\n        if (caseVariant.type === undefined) {\n            return this.ctor(caseVariant.tag, undefined);\n        }\n        else {\n            offset += this.discriminantType.size;\n            offset = align(offset, this.maxCaseAlignment);\n            const value = caseVariant.type.load(memory, offset, context);\n            return this.ctor(caseVariant.tag, value);\n        }\n    }\n    liftFlat(memory, values, context) {\n        // First one is the discriminant type. So skip it.\n        let valuesToReadOver = this.flatTypes.length - 1;\n        const caseIndex = this.discriminantType.liftFlat(memory, values);\n        const caseVariant = this.cases[caseIndex];\n        let result;\n        if (caseVariant.type === undefined) {\n            result = this.ctor(caseVariant.tag, undefined);\n        }\n        else {\n            // The first flat type is the discriminant type. So skip it.\n            const wantFlatTypes = caseVariant.wantFlatTypes;\n            const iter = new CoerceValueIter(values, this.flatTypes.slice(1), wantFlatTypes);\n            const value = caseVariant.type.liftFlat(memory, iter, context);\n            result = this.ctor(caseVariant.tag, value);\n            valuesToReadOver = valuesToReadOver - wantFlatTypes.length;\n        }\n        for (let i = 0; i < valuesToReadOver; i++) {\n            values.next();\n        }\n        return result;\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memory, offset, variantValue, context) {\n        const index = this.case2Index.get(variantValue.tag);\n        if (index === undefined) {\n            throw new ComponentModelTrap(`Variant case ${variantValue.tag} not found`);\n        }\n        this.discriminantType.store(memory, offset, index);\n        offset += this.discriminantType.size;\n        const c = this.cases[index];\n        if (c.type !== undefined && variantValue.value !== undefined) {\n            offset = align(offset, this.maxCaseAlignment);\n            c.type.store(memory, offset, variantValue.value, context);\n        }\n    }\n    lowerFlat(result, memory, variantValue, context) {\n        const flatTypes = this.flatTypes;\n        const index = this.case2Index.get(variantValue.tag);\n        if (index === undefined) {\n            throw new ComponentModelTrap(`Variant case ${variantValue.tag} not found`);\n        }\n        this.discriminantType.lowerFlat(result, memory, index);\n        const c = this.cases[index];\n        // First one is the discriminant type. So skip it.\n        let valuesToFill = this.flatTypes.length - 1;\n        if (c.type !== undefined && variantValue.value !== undefined) {\n            const payload = [];\n            c.type.lowerFlat(payload, memory, variantValue.value, context);\n            // First one is the discriminant type. So skip it.\n            const wantTypes = flatTypes.slice(1);\n            const haveTypes = c.wantFlatTypes;\n            if (payload.length !== haveTypes.length) {\n                throw new ComponentModelTrap('Mismatched flat types');\n            }\n            for (let i = 0; i < wantTypes.length; i++) {\n                const have = haveTypes[i];\n                const want = wantTypes[i];\n                if (have === $f32 && want === $i32) {\n                    payload[i] = WasmTypes.reinterpret_f32_as_i32(payload[i]);\n                }\n                else if (have === $i32 && want === $i64) {\n                    payload[i] = WasmTypes.convert_i32_to_i64(payload[i]);\n                }\n                else if (have === $f32 && want === $i64) {\n                    payload[i] = WasmTypes.reinterpret_f32_as_i64(payload[i]);\n                }\n                else if (have === $f64 && want === $i64) {\n                    payload[i] = WasmTypes.reinterpret_f64_as_i64(payload[i]);\n                }\n            }\n            valuesToFill = valuesToFill - payload.length;\n            result.push(...payload);\n        }\n        for (let i = flatTypes.length - valuesToFill; i < flatTypes.length; i++) {\n            const type = flatTypes[i];\n            if (type === $i64) {\n                result.push(0n);\n            }\n            else {\n                result.push(0);\n            }\n        }\n    }\n    copy(dest, dest_offset, src, src_offset, context) {\n        this.discriminantType.copy(dest, dest_offset, src, src_offset);\n        const caseIndex = this.discriminantType.load(src, src_offset);\n        const caseVariant = this.cases[caseIndex];\n        if (caseVariant.type === undefined) {\n            return;\n        }\n        src_offset += this.discriminantType.size;\n        src_offset = align(src_offset, this.maxCaseAlignment);\n        dest_offset += this.discriminantType.size;\n        dest_offset = align(dest_offset, this.maxCaseAlignment);\n        caseVariant.type.copy(dest, dest_offset, src, src_offset, context);\n    }\n    copyFlat(result, dest, values, src, context) {\n        let valuesToCopy = this.flatTypes.length - 1;\n        this.discriminantType.copyFlat(result, dest, values, src);\n        const caseIndex = result[result.length - 1];\n        const caseVariant = this.cases[caseIndex];\n        if (caseVariant.type !== undefined) {\n            const wantFlatTypes = caseVariant.wantFlatTypes;\n            // The first flat type is the discriminant type. So skip it.\n            const iter = new CoerceValueIter(values, this.flatTypes.slice(1), wantFlatTypes);\n            caseVariant.type.copyFlat(result, dest, iter, src, context);\n            valuesToCopy = valuesToCopy - wantFlatTypes.length;\n        }\n        for (let i = 0; i < valuesToCopy; i++) {\n            result.push(values.next().value);\n        }\n    }\n    static size(discriminantType, cases) {\n        let result = discriminantType.size;\n        result = align(result, this.maxCaseAlignment(cases));\n        return result + this.maxCaseSize(cases);\n    }\n    static alignment(discriminantType, cases) {\n        return Math.max(discriminantType.alignment, this.maxCaseAlignment(cases));\n    }\n    static flatTypes(discriminantType, cases) {\n        const flat = [];\n        for (const c of cases) {\n            if (c.type === undefined) {\n                continue;\n            }\n            const flatTypes = c.type.flatTypes;\n            for (let i = 0; i < flatTypes.length; i++) {\n                const want = flatTypes[i];\n                if (i < flat.length) {\n                    const use = this.joinFlatType(flat[i], want);\n                    flat[i] = use;\n                    c.wantFlatTypes.push(want);\n                }\n                else {\n                    flat.push(want);\n                    c.wantFlatTypes.push(want);\n                }\n            }\n        }\n        return [...discriminantType.flatTypes, ...flat];\n    }\n    static discriminantType(cases) {\n        switch (Math.ceil(Math.log2(cases) / 8)) {\n            case 0: return u8;\n            case 1: return u8;\n            case 2: return u16;\n            case 3: return u32;\n        }\n        throw new ComponentModelTrap(`Too many cases: ${cases}`);\n    }\n    static maxCaseAlignment(cases) {\n        let result = 1;\n        for (const c of cases) {\n            if (c.type !== undefined) {\n                result = Math.max(result, c.type.alignment);\n            }\n        }\n        return result;\n    }\n    static maxCaseSize(cases) {\n        let result = 0;\n        for (const c of cases) {\n            if (c.type !== undefined) {\n                result = Math.max(result, c.type.size);\n            }\n        }\n        return result;\n    }\n    static joinFlatType(a, b) {\n        if (a === b) {\n            return a;\n        }\n        if ((a === $i32 && b === $f32) || (a === $f32 && b === $i32)) {\n            return $i32;\n        }\n        return $i64;\n    }\n}\nexports.VariantType = VariantType;\nclass EnumType {\n    discriminantType;\n    cases;\n    case2index;\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    constructor(cases) {\n        this.discriminantType = EnumType.discriminantType(cases.length);\n        this.cases = cases;\n        this.case2index = new Map();\n        for (let i = 0; i < cases.length; i++) {\n            const c = cases[i];\n            this.case2index.set(c, i);\n        }\n        this.kind = ComponentModelTypeKind.enum;\n        this.size = this.discriminantType.size;\n        this.alignment = this.discriminantType.alignment;\n        this.flatTypes = this.discriminantType.flatTypes;\n    }\n    load(memory, offset, context) {\n        const index = this.assertRange(this.discriminantType.load(memory, offset, context));\n        return this.cases[index];\n    }\n    liftFlat(memory, values, context) {\n        const index = this.assertRange(this.discriminantType.liftFlat(memory, values, context));\n        return this.cases[index];\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memory, offset, value, context) {\n        const index = this.case2index.get(value);\n        if (index === undefined) {\n            throw new ComponentModelTrap('Enumeration value not found');\n        }\n        this.discriminantType.store(memory, offset, index, context);\n    }\n    lowerFlat(result, memory, value, context) {\n        const index = this.case2index.get(value);\n        if (index === undefined) {\n            throw new ComponentModelTrap('Enumeration value not found');\n        }\n        this.discriminantType.lowerFlat(result, memory, index, context);\n    }\n    copy(dest, dest_offset, src, src_offset, context) {\n        this.discriminantType.copy(dest, dest_offset, src, src_offset, context);\n    }\n    copyFlat(result, dest, values, src, context) {\n        this.discriminantType.copyFlat(result, dest, values, src, context);\n    }\n    assertRange(value) {\n        if (value < 0 || value > this.cases.length) {\n            throw new ComponentModelTrap('Enumeration value out of range');\n        }\n        return value;\n    }\n    static discriminantType(cases) {\n        switch (Math.ceil(Math.log2(cases) / 8)) {\n            case 0: return u8;\n            case 1: return u8;\n            case 2: return u16;\n            case 3: return u32;\n        }\n        throw new ComponentModelTrap(`Too many cases: ${cases}`);\n    }\n}\nexports.EnumType = EnumType;\nvar option;\n(function (option) {\n    option.none = 'none';\n    function None() {\n        return new OptionImpl(option.none, undefined);\n    }\n    option.None = None;\n    option.some = 'some';\n    function Some(value) {\n        return new OptionImpl(option.some, value);\n    }\n    option.Some = Some;\n    function _ctor(c, v) {\n        return new OptionImpl(c, v);\n    }\n    option._ctor = _ctor;\n    function isOption(value) {\n        return value instanceof OptionImpl;\n    }\n    option.isOption = isOption;\n    class OptionImpl {\n        _tag;\n        _value;\n        constructor(tag, value) {\n            this._tag = tag;\n            this._value = value;\n        }\n        get tag() {\n            return this._tag;\n        }\n        get value() {\n            return this._value;\n        }\n        isNone() {\n            return this._tag === option.none;\n        }\n        isSome() {\n            return this._tag === option.some;\n        }\n    }\n    class Error extends ResultError {\n        constructor(cause) {\n            super(`Error value: ${JSON.stringify(cause)}`, cause);\n        }\n    }\n    option.Error = Error;\n})(option || (exports.option = option = {}));\nclass OptionType {\n    valueType;\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    constructor(valueType) {\n        this.valueType = valueType;\n        this.kind = ComponentModelTypeKind.option;\n        this.size = this.computeSize();\n        this.alignment = this.computeAlignment();\n        this.flatTypes = this.computeFlatTypes();\n    }\n    load(memory, offset, context) {\n        const caseIndex = u8.load(memory, offset);\n        if (caseIndex === 0) { // index 0 is none\n            return context.options.keepOption ? option._ctor(option.none, undefined) : undefined;\n        }\n        else {\n            offset += u8.size;\n            offset = align(offset, this.alignment);\n            const value = this.valueType.load(memory, offset, context);\n            return (context.options.keepOption ? option._ctor(option.some, value) : value);\n        }\n    }\n    liftFlat(memory, values, context) {\n        // First one is the discriminant type. So skip it.\n        const caseIndex = u8.liftFlat(memory, values);\n        if (caseIndex === 0) { // Index 0 is none\n            // Read over the value params\n            for (let i = 0; i < this.valueType.flatTypes.length; i++) {\n                values.next();\n            }\n            return context.options.keepOption ? option._ctor(option.none, undefined) : undefined;\n        }\n        else {\n            const value = this.valueType.liftFlat(memory, values, context);\n            return (context.options.keepOption ? option._ctor(option.some, value) : value);\n        }\n    }\n    alloc(memory) {\n        return memory.alloc(this.alignment, this.size);\n    }\n    store(memory, offset, value, context) {\n        const optValue = this.asOptionValue(value, context.options);\n        const index = optValue.tag === option.none ? 0 : 1;\n        u8.store(memory, offset, index);\n        offset += u8.size;\n        if (optValue.tag === option.some) {\n            offset = align(offset, this.valueType.alignment);\n            this.valueType.store(memory, offset, optValue.value, context);\n        }\n    }\n    lowerFlat(result, memory, value, context) {\n        const optValue = this.asOptionValue(value, context.options);\n        const index = optValue.tag === option.none ? 0 : 1;\n        u8.lowerFlat(result, memory, index);\n        if (optValue.tag === option.none) {\n            for (const type of this.valueType.flatTypes) {\n                if (type === $i64) {\n                    result.push(0n);\n                }\n                else {\n                    result.push(0);\n                }\n            }\n        }\n        else {\n            this.valueType.lowerFlat(result, memory, optValue.value, context);\n        }\n    }\n    copy(dest, dest_offset, src, src_offset, context) {\n        u8.copy(dest, dest_offset, src, src_offset);\n        const caseIndex = u8.load(src, src_offset);\n        if (caseIndex === 0) {\n            return;\n        }\n        else {\n            src_offset += u8.size;\n            src_offset = align(src_offset, this.alignment);\n            dest_offset += u8.size;\n            dest_offset = align(dest_offset, this.alignment);\n            this.valueType.copy(dest, dest_offset, src, src_offset, context);\n        }\n    }\n    copyFlat(result, dest, values, src, context) {\n        u8.copyFlat(result, dest, values, src);\n        const caseIndex = result[result.length - 1];\n        if (caseIndex === 0) {\n            for (const _type of this.valueType.flatTypes) {\n                result.push(values.next().value);\n            }\n        }\n        else {\n            this.valueType.copyFlat(result, dest, values, src, context);\n        }\n    }\n    asOptionValue(value, options) {\n        if (option.isOption(value)) {\n            if (!options.keepOption) {\n                throw new ComponentModelTrap('Received an option value although options should be unpacked.');\n            }\n            return value;\n        }\n        else {\n            if (options.keepOption) {\n                throw new ComponentModelTrap('Received a unpacked option value although options should NOT be unpacked.');\n            }\n            return value === undefined ? option._ctor(option.none, undefined) : option._ctor(option.some, value);\n        }\n    }\n    computeSize() {\n        let result = u8.size;\n        result = align(result, this.valueType.alignment);\n        return result + this.valueType.size;\n    }\n    computeAlignment() {\n        return Math.max(u8.alignment, this.valueType.alignment);\n    }\n    computeFlatTypes() {\n        return [...u8.flatTypes, ...this.valueType.flatTypes];\n    }\n}\nexports.OptionType = OptionType;\nvar result;\n(function (result) {\n    result.ok = 'ok';\n    function Ok(value) {\n        return new ResultImpl(result.ok, value);\n    }\n    result.Ok = Ok;\n    result.error = 'error';\n    function Error(value) {\n        return new ResultImpl(result.error, value);\n    }\n    result.Error = Error;\n    function _ctor(c, v) {\n        return new ResultImpl(c, v);\n    }\n    result._ctor = _ctor;\n    class ResultImpl {\n        _tag;\n        _value;\n        constructor(tag, value) {\n            this._tag = tag;\n            this._value = value;\n        }\n        get tag() {\n            return this._tag;\n        }\n        get value() {\n            return this._value;\n        }\n        isOk() {\n            return this._tag === result.ok;\n        }\n        isError() {\n            return this._tag === result.error;\n        }\n    }\n    result.ResultImpl = ResultImpl;\n})(result || (exports.result = result = {}));\nclass ResultType extends VariantType {\n    _errorClass;\n    constructor(okType, errorType, errorClass) {\n        super([['ok', okType], ['error', errorType]], (result._ctor), ComponentModelTypeKind.result);\n        this._errorClass = errorClass;\n    }\n    get errorClass() {\n        return this._errorClass;\n    }\n}\nexports.ResultType = ResultType;\nvar Resource;\n(function (Resource) {\n    class Default {\n        _handle;\n        constructor(handleOrManager) {\n            if (typeof handleOrManager === 'number') {\n                this._handle = handleOrManager;\n            }\n            else {\n                this._handle = handleOrManager.registerResource(this);\n            }\n        }\n        $handle() {\n            return this._handle;\n        }\n    }\n    Resource.Default = Default;\n    function getRepresentation(resource) {\n        return typeof resource.$rep === 'function' ? resource.$rep() : undefined;\n    }\n    Resource.getRepresentation = getRepresentation;\n})(Resource || (exports.Resource = Resource = {}));\nvar ResourceManager;\n(function (ResourceManager) {\n    ResourceManager.handleTag = Symbol('handleTag');\n    class Default {\n        handleCounter;\n        handleTable;\n        h2r;\n        finalizer;\n        ctor;\n        dtor;\n        // We only need the representation counter for the loop implementation.\n        // To make them distinguishable from handles or normal representations we\n        // start with MaxValue and decrement it for each new representation.\n        representationCounter;\n        loopTable;\n        constructor() {\n            this.handleCounter = 1;\n            this.handleTable = new Map();\n            this.h2r = new Map();\n            this.finalizer = new FinalizationRegistry((value) => {\n                const { handle, rep } = value;\n                // A proxy was collected, remove the resource.\n                try {\n                    this.dtor(rep);\n                }\n                catch (error) {\n                    // Log the error.\n                    (0, ral_1.default)().console.error(error);\n                }\n                // Clean up tables\n                this.h2r.delete(handle);\n                this.handleTable.delete(handle);\n                // Also remove the representation from the loop if existed\n                this.loopTable?.delete(rep);\n            });\n            this.representationCounter = Number.MAX_VALUE;\n            this.loopTable = undefined;\n        }\n        newHandle(rep) {\n            const handle = this.handleCounter++;\n            this.handleTable.set(handle, rep);\n            return handle;\n        }\n        getRepresentation(handle) {\n            const rep = this.handleTable.get(handle);\n            if (rep === undefined) {\n                throw new ComponentModelTrap(`No representation registered for resource handle ${handle}`);\n            }\n            return rep;\n        }\n        dropHandle(handle) {\n            const rep = this.handleTable.get(handle);\n            if (rep === undefined) {\n                throw new ComponentModelTrap(`Unknown resource handle ${handle}`);\n            }\n            if (this.dtor !== undefined) {\n                this.dtor(rep);\n            }\n            this.handleTable.delete(handle);\n            return rep;\n        }\n        setProxyInfo(ctor, dtor) {\n            this.ctor = ctor;\n            this.dtor = dtor;\n        }\n        hasResource(handle) {\n            return this.h2r.has(handle);\n        }\n        getResource(handle) {\n            const value = this.h2r.get(handle);\n            if (value !== undefined) {\n                if (value instanceof WeakRef) {\n                    const unwrapped = value.deref();\n                    if (unwrapped === undefined) {\n                        throw new ComponentModelTrap(`Resource for handle ${handle} has been collected.`);\n                    }\n                    return unwrapped;\n                }\n                else {\n                    return value;\n                }\n            }\n            // This handle represents a resource that lives on the\n            // WebAssembly side. Since we don't have a resource for it\n            // yet we create one on the fly.\n            const rep = this.handleTable.get(handle);\n            if (rep !== undefined) {\n                if (this.ctor === undefined) {\n                    throw new ComponentModelTrap(`No proxy constructor set`);\n                }\n                const proxy = new this.ctor(ResourceManager.handleTag, handle, rep);\n                this.setProxy(handle, rep, proxy);\n                return proxy;\n            }\n            else {\n                throw new ComponentModelTrap(`Unknown resource handle ${handle}`);\n            }\n        }\n        registerResource(resource, handle) {\n            if (handle !== undefined) {\n                if (handle >= this.handleCounter) {\n                    throw new ComponentModelTrap(`Handle ${handle} is out of bounds. Current handle counter is ${this.handleCounter}.`);\n                }\n                if (this.h2r.has(handle)) {\n                    throw new ComponentModelTrap(`Handle ${handle} is already registered.`);\n                }\n                if (this.handleTable.has(handle)) {\n                    throw new ComponentModelTrap(`Handle ${handle} is already in use as a proxy handle.`);\n                }\n            }\n            else {\n                handle = this.handleCounter++;\n            }\n            this.h2r.set(handle, resource);\n            return handle;\n        }\n        registerProxy(proxy) {\n            const handle = proxy.$handle();\n            const rep = Resource.getRepresentation(proxy) ?? this.handleTable.get(handle);\n            if (rep === undefined) {\n                throw new ComponentModelTrap(`Unknown proxy handle ${handle}`);\n            }\n            this.setProxy(handle, rep, proxy);\n        }\n        removeResource(value) {\n            const handle = typeof value === 'number' ? value : value.$handle();\n            const resource = this.h2r.get(handle);\n            if (resource === undefined) {\n                throw new ComponentModelTrap(`Unknown resource handle ${handle}.`);\n            }\n            if (resource instanceof WeakRef) {\n                throw new ComponentModelTrap(`Proxy resources should not be removed manually. They are removed via the GC.`);\n            }\n            this.h2r.delete(handle);\n        }\n        registerLoop(handle) {\n            if (this.loopTable === undefined) {\n                this.loopTable = new Map();\n            }\n            const result = this.handleCounter++;\n            const representation = this.representationCounter--;\n            this.handleTable.set(result, representation);\n            this.loopTable.set(representation, handle);\n            return result;\n        }\n        getLoop(rep) {\n            const result = this.loopTable?.get(rep);\n            if (result === undefined) {\n                throw new ComponentModelTrap(`Unknown loop handle for representation ${rep}`);\n            }\n            return result;\n        }\n        setProxy(handle, rep, proxy) {\n            if (this.dtor === undefined) {\n                throw new ComponentModelTrap(`No proxy destructor set`);\n            }\n            this.h2r.set(handle, new WeakRef(proxy));\n            this.finalizer.register(proxy, { handle, rep }, proxy);\n        }\n    }\n    ResourceManager.Default = Default;\n    function from(obj) {\n        if (obj === undefined) {\n            return undefined;\n        }\n        return (obj.$resources ?? obj.$resourceManager ?? obj.$manager);\n    }\n    ResourceManager.from = from;\n})(ResourceManager || (exports.ResourceManager = ResourceManager = {}));\nvar ResourceManagers;\n(function (ResourceManagers) {\n    class Default {\n        managers;\n        constructor() {\n            this.managers = new Map();\n        }\n        has(id) {\n            return this.managers.has(id);\n        }\n        set(id, manager) {\n            if (this.managers.has(id)) {\n                throw new ComponentModelTrap(`Resource manager ${id} already registered.`);\n            }\n            this.managers.set(id, manager);\n        }\n        ensure(id) {\n            const manager = this.managers.get(id);\n            if (manager === undefined) {\n                throw new ComponentModelTrap(`Resource manager ${id} not found.`);\n            }\n            return manager;\n        }\n        get(id) {\n            return this.managers.get(id);\n        }\n    }\n    ResourceManagers.Default = Default;\n    function is(value) {\n        const candidate = value;\n        return candidate && typeof candidate.has === 'function' && typeof candidate.ensure === 'function' && typeof candidate.get === 'function' && typeof candidate.set === 'function';\n    }\n    ResourceManagers.is = is;\n})(ResourceManagers || (exports.ResourceManagers = ResourceManagers = {}));\nclass Callable {\n    static EMPTY_JTYPE = Object.freeze([]);\n    static EMPTY_WASM_TYPE = Object.freeze([]);\n    static MAX_FLAT_PARAMS = 16;\n    static MAX_FLAT_RESULTS = 1;\n    witName;\n    params;\n    returnType;\n    paramType;\n    isSingleParam;\n    mode;\n    constructor(witName, params, returnType) {\n        this.witName = witName;\n        this.params = params;\n        this.returnType = returnType;\n        switch (params.length) {\n            case 0:\n                this.paramType = undefined;\n                this.isSingleParam = false;\n                break;\n            case 1:\n                this.paramType = params[0][1];\n                this.isSingleParam = true;\n                break;\n            default:\n                this.paramType = new TupleType(params.map(p => p[1]));\n                this.isSingleParam = false;\n        }\n        this.mode = 'lower';\n    }\n    liftParamValues(wasmValues, memory, context) {\n        if (this.paramType === undefined) {\n            return Callable.EMPTY_JTYPE;\n        }\n        let result;\n        if (this.paramType.flatTypes.length > Callable.MAX_FLAT_PARAMS) {\n            const p0 = wasmValues[0];\n            if (!Number.isInteger(p0)) {\n                throw new ComponentModelTrap('Invalid pointer');\n            }\n            result = this.paramType.load(memory.readonly(p0, this.paramType.size), 0, context);\n        }\n        else {\n            result = this.paramType.liftFlat(memory, wasmValues.values(), context);\n        }\n        return this.isSingleParam ? [result] : result;\n    }\n    lowerParamValues(values, memory, context) {\n        if (this.paramType === undefined) {\n            return Callable.EMPTY_WASM_TYPE;\n        }\n        if (this.isSingleParam && values.length !== 1) {\n            throw new ComponentModelTrap(`Expected a single parameter, but got ${values.length}`);\n        }\n        const toLower = this.isSingleParam ? values[0] : values;\n        if (this.paramType.flatTypes.length > Callable.MAX_FLAT_PARAMS) {\n            const writer = this.paramType.alloc(memory);\n            this.paramType.store(writer, 0, toLower, context);\n            return [writer.ptr];\n        }\n        else {\n            const result = [];\n            this.paramType.lowerFlat(result, memory, toLower, context);\n            return result;\n        }\n    }\n    copyParamValues(result, dest, wasmValues, src, context) {\n        const flatReturnTypes = this.returnType !== undefined ? this.returnType.flatTypes.length : 0;\n        const flatParamTypes = this.paramType !== undefined ? this.paramType.flatTypes.length : 0;\n        let out = undefined;\n        if (flatReturnTypes > Callable.MAX_FLAT_RESULTS) {\n            // Check if the result pointer got passed as the last value in the flat types\n            if (wasmValues.length === flatParamTypes + 1) {\n                const last = wasmValues[flatParamTypes];\n                if (!Number.isInteger(last)) {\n                    throw new ComponentModelTrap(`Expected a pointer as return parameter, but got ${last}`);\n                }\n                out = last;\n            }\n        }\n        if (this.paramType === undefined) {\n            if ((out === undefined && wasmValues.length !== 0) || (out !== undefined && wasmValues.length !== 1)) {\n                throw new ComponentModelTrap(`Expected no parameters, but got ${wasmValues.length}`);\n            }\n        }\n        else if (this.paramType.flatTypes.length > Callable.MAX_FLAT_PARAMS) {\n            const p0 = wasmValues[0];\n            if (!Number.isInteger(p0)) {\n                throw new ComponentModelTrap('Invalid pointer');\n            }\n            const srcReader = src.readonly(p0, this.paramType.size);\n            this.paramType.copy(this.paramType.alloc(dest), 0, srcReader, 0, context);\n        }\n        else {\n            this.paramType.copyFlat(result, dest, wasmValues.values(), src, context);\n        }\n        // Allocate space for the result in dest and add it to the end of the flat values.\n        if (out !== undefined && this.returnType !== undefined) {\n            const destResult = this.returnType.alloc(dest);\n            result.push(destResult.ptr);\n            return { transferResult: destResult, originalResult: src.preAllocated(out, this.returnType.size) };\n        }\n        else {\n            return undefined;\n        }\n    }\n    lowerReturnValue(value, memory, context, out) {\n        if (this.returnType === undefined) {\n            return;\n        }\n        if (this.returnType.flatTypes.length <= Callable.MAX_FLAT_RESULTS) {\n            const result = [];\n            this.returnType.lowerFlat(result, memory, value, context);\n            if (result.length !== this.returnType.flatTypes.length) {\n                throw new ComponentModelTrap(`Expected flat result of length ${this.returnType.flatTypes.length}, but got ${JSON.stringify(result, undefined, undefined)}`);\n            }\n            return result[0];\n        }\n        else {\n            const writer = out !== undefined ? memory.preAllocated(out, this.returnType.size) : this.returnType.alloc(memory);\n            this.returnType.store(writer, 0, value, context);\n            return out !== undefined ? undefined : writer.ptr;\n        }\n    }\n    handleError(error, memory, context, out) {\n        if (!(this.returnType instanceof ResultType) || this.returnType.errorClass === undefined || !(error instanceof this.returnType.errorClass)) {\n            throw error;\n        }\n        const value = result.Error(error.cause);\n        return this.lowerReturnValue(value, memory, context, out);\n    }\n    copyReturnValue(resultStorage, dest, src, value, context) {\n        if (resultStorage !== undefined) {\n            if (this.returnType === undefined) {\n                throw new ComponentModelTrap(`Result storage should not be set if there is no return type.`);\n            }\n            if (value !== undefined) {\n                throw new ComponentModelTrap(`Can't use both result storage and result value ${value}.`);\n            }\n            this.returnType.copy(resultStorage.originalResult, 0, resultStorage.transferResult, 0, context);\n            return undefined;\n        }\n        else if (value !== undefined) {\n            if (this.returnType === undefined) {\n                throw new ComponentModelTrap(`Expected no return value, but got ${value}`);\n            }\n            if (this.returnType.flatTypes.length > Callable.MAX_FLAT_RESULTS) {\n                if (!Number.isInteger(value)) {\n                    throw new ComponentModelTrap(`Expected a pointer as return value, but got ${value}`);\n                }\n                const destWriter = this.returnType.alloc(dest);\n                this.returnType.copy(destWriter, 0, src.preAllocated(value, this.returnType.size), 0, context);\n                return destWriter.ptr;\n            }\n            else {\n                return value;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Calls a function inside a wasm module.\n     */\n    callWasm(params, wasmFunction, context) {\n        const memory = context.getMemory();\n        const wasmValues = this.lowerParamValues(params, memory, context);\n        const result = wasmFunction(...wasmValues);\n        return this.liftReturnValue(result, memory, context);\n    }\n    /**\n     * Calls a resource method inside a wasm module.\n     */\n    callWasmMethod(obj, params, wasmFunction, context) {\n        const memory = context.getMemory();\n        const handle = obj.$rep();\n        const wasmValues = this.lowerParamValues(params, memory, context);\n        const result = wasmFunction(handle, ...wasmValues);\n        return this.liftReturnValue(result, memory, context);\n    }\n    /**\n     * Call a host function on the main thread from a wasm module.\n     */\n    callMain(connection, qualifier, params, context) {\n        connection.prepareCall();\n        const newParams = [];\n        const resultStorage = this.copyParamValues(newParams, connection.getMemory(), params, context.getMemory(), context);\n        const result = connection.callMain(`${qualifier}#${this.witName}`, newParams);\n        return this.copyReturnValue(resultStorage, context.getMemory(), connection.getMemory(), result, context);\n    }\n    /**\n     * Call a wasm function from a worker thread.\n     */\n    callWasmFromWorker(transferMemory, func, params, context) {\n        const newParams = [];\n        const resultStorage = this.copyParamValues(newParams, context.getMemory(), params, transferMemory, context);\n        const result = func(...newParams);\n        return this.copyReturnValue(resultStorage, transferMemory, context.getMemory(), result, context);\n    }\n    /**\n     * Call a wasm method from a worker thread.\n     */\n    callWasmMethodFromWorker(transferMemory, func, params, context) {\n        const handle = params[0];\n        if (typeof handle !== 'number') {\n            throw new ComponentModelTrap(`Expected a number as handle, but got ${handle}`);\n        }\n        const newParams = [];\n        const resultStorage = this.copyParamValues(newParams, context.getMemory(), params.slice(1), transferMemory, context);\n        const result = func(handle, ...newParams);\n        return this.copyReturnValue(resultStorage, transferMemory, context.getMemory(), result, context);\n    }\n    /**\n     * Call the wasm function from the main thread.\n     */\n    async callWorker(connection, qualifier, params, context) {\n        return connection.lock(async () => {\n            connection.prepareCall();\n            const memory = connection.getMemory();\n            const wasmValues = this.lowerParamValues(params, memory, context);\n            let result = await connection.callWorker(`${qualifier}#${this.witName}`, wasmValues);\n            return this.liftReturnValue(result, memory, context);\n        });\n    }\n    /**\n     * Call a resource method inside a wasm module.\n     */\n    async callWorkerMethod(connection, qualifier, obj, params, context) {\n        return connection.lock(async () => {\n            connection.prepareCall();\n            const memory = connection.getMemory();\n            const handle = obj.$rep();\n            const wasmValues = this.lowerParamValues(params, memory, context).slice();\n            wasmValues.unshift(handle);\n            const result = await connection.callWorker(`${qualifier}#${this.witName}`, wasmValues);\n            return this.liftReturnValue(result, memory, context);\n        });\n    }\n    getParamValuesForHostCall(params, memory, context) {\n        const returnFlatTypes = this.returnType === undefined ? 0 : this.returnType.flatTypes.length;\n        // We currently only support 'lower' mode for results > MAX_FLAT_RESULTS. From the spec:\n        // As an optimization, when lowering the return value of an imported function (via canon lower),\n        // the caller can have already allocated space for the return value (e.g., efficiently on the stack),\n        // passing in an i32 pointer as an parameter instead of returning an i32 as a return value.\n        // See https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#flattening\n        let out;\n        if (returnFlatTypes > FunctionType.MAX_FLAT_RESULTS) {\n            const paramFlatTypes = this.paramType !== undefined ? this.paramType.flatTypes.length : 0;\n            // The caller allocated the memory. We just need to pass the pointer.\n            if (params.length === paramFlatTypes + 1) {\n                const last = params[paramFlatTypes];\n                if (typeof last !== 'number') {\n                    throw new ComponentModelTrap(`Result pointer must be a number (u32), but got ${out}.`);\n                }\n                out = last;\n            }\n        }\n        return [this.liftParamValues(params, memory, context), out];\n    }\n    liftReturnValue(value, memory, context) {\n        if (this.returnType === undefined) {\n            return;\n        }\n        let result;\n        if (this.returnType.flatTypes.length <= Callable.MAX_FLAT_RESULTS) {\n            result = this.returnType.liftFlat(memory, [value].values(), context);\n        }\n        else {\n            result = this.returnType.load(memory.readonly(value, this.returnType.size), 0, context);\n        }\n        if (this.returnType instanceof ResultType) {\n            const resultValue = result;\n            if (resultValue.isError()) {\n                if (this.returnType.errorClass === undefined) {\n                    throw new ComponentModelTrap(`Received an error result, but no error class is defined.`);\n                }\n                throw new this.returnType.errorClass(resultValue.value);\n            }\n            else {\n                return resultValue.value;\n            }\n        }\n        else {\n            return result;\n        }\n    }\n}\nclass FunctionType extends Callable {\n    constructor(witName, params, returnType) {\n        super(witName, params, returnType);\n    }\n    /**\n     * Calls a service function from a wasm module.\n     */\n    callService(func, params, context) {\n        const [jParams, out] = this.getParamValuesForHostCall(params, context.getMemory(), context);\n        try {\n            const result = func(...jParams);\n            return this.lowerReturnValue(result, context.getMemory(), context, out);\n        }\n        catch (error) {\n            return this.handleError(error, context.getMemory(), context, out);\n        }\n    }\n    async callServiceAsync(memory, func, params, context) {\n        const [jParams, out] = this.getParamValuesForHostCall(params, memory, context);\n        try {\n            const result = await func(...jParams);\n            return this.lowerReturnValue(result, memory, context, out);\n        }\n        catch (error) {\n            return this.handleError(error, memory, context, out);\n        }\n    }\n}\nexports.FunctionType = FunctionType;\nclass ConstructorType extends Callable {\n    constructor(witName, params, returnType) {\n        super(witName, params, returnType);\n    }\n    callService(clazz, params, context) {\n        // We currently only support 'lower' mode for results > MAX_FLAT_RESULTS.\n        const returnFlatTypes = this.returnType === undefined ? 0 : this.returnType.flatTypes.length;\n        if (returnFlatTypes !== 1) {\n            throw new ComponentModelTrap(`Expected exactly one return type, but got ${returnFlatTypes}.`);\n        }\n        const memory = context.getMemory();\n        const jParams = this.liftParamValues(params, memory, context);\n        const obj = new clazz(...jParams);\n        return obj.$handle();\n    }\n    async callServiceAsync(memory, clazz, params, context) {\n        // We currently only support 'lower' mode for results > MAX_FLAT_RESULTS.\n        const returnFlatTypes = this.returnType === undefined ? 0 : this.returnType.flatTypes.length;\n        if (returnFlatTypes !== 1) {\n            throw new ComponentModelTrap(`Expected exactly one return type, but got ${returnFlatTypes}.`);\n        }\n        const jParams = this.liftParamValues(params, memory, context);\n        const obj = await clazz.$new(...jParams);\n        return obj.$handle();\n    }\n    callWasmConstructor(params, wasmFunction, context) {\n        const memory = context.getMemory();\n        const wasmValues = this.lowerParamValues(params, memory, context);\n        const result = wasmFunction(...wasmValues);\n        if (typeof result !== 'number') {\n            throw new ComponentModelTrap(`Expected a number (u32) as return value, but got ${result}.`);\n        }\n        return result;\n    }\n    callWasmConstructorAsync(connection, qualifier, params, context) {\n        return connection.lock(async () => {\n            connection.prepareCall();\n            const memory = connection.getMemory();\n            const wasmValues = this.lowerParamValues(params, memory, context);\n            return connection.callWorker(`${qualifier}#${this.witName}`, wasmValues);\n        });\n    }\n}\nexports.ConstructorType = ConstructorType;\nclass DestructorType extends Callable {\n    constructor(witName, params) {\n        super(witName, params);\n    }\n    callService(params, resourceManager) {\n        const handle = params[0];\n        if (typeof handle === 'bigint' || !u32.valid(handle)) {\n            throw new ComponentModelTrap(`Object handle must be a number (u32), but got ${handle}.`);\n        }\n        const resource = resourceManager.getResource(handle);\n        resource['$drop'] !== undefined && resource['$drop']();\n        resourceManager.removeResource(handle);\n    }\n    async callServiceAsync(_memory, params, resourceManager) {\n        const handle = params[0];\n        if (typeof handle === 'bigint' || !u32.valid(handle)) {\n            throw new ComponentModelTrap(`Object handle must be a number (u32), but got ${handle}.`);\n        }\n        const resource = resourceManager.getResource(handle);\n        resource['$drop'] !== undefined && await resource['$drop']();\n        resourceManager.removeResource(handle);\n    }\n}\nexports.DestructorType = DestructorType;\nclass StaticMethodType extends Callable {\n    constructor(witName, params, returnType) {\n        super(witName, params, returnType);\n    }\n    callService(func, params, context) {\n        const [jParams, out] = this.getParamValuesForHostCall(params, context.getMemory(), context);\n        try {\n            const result = func(...jParams);\n            return this.lowerReturnValue(result, context.getMemory(), context, out);\n        }\n        catch (error) {\n            return this.handleError(error, context.getMemory(), context, out);\n        }\n    }\n    async callServiceAsync(memory, func, params, context) {\n        const [jParams, out] = this.getParamValuesForHostCall(params, memory, context);\n        try {\n            const result = await func(...jParams);\n            return this.lowerReturnValue(result, memory, context, out);\n        }\n        catch (error) {\n            return this.handleError(error, memory, context, out);\n        }\n    }\n}\nexports.StaticMethodType = StaticMethodType;\nclass MethodType extends Callable {\n    constructor(witName, params, returnType) {\n        super(witName, params, returnType);\n    }\n    callService(methodName, params, resourceManager, context) {\n        if (params.length === 0) {\n            throw new ComponentModelTrap(`Method calls must have at least one parameter (the object pointer).`);\n        }\n        // We need to cut off the first parameter (the object handle).\n        const handle = params.shift();\n        if (typeof handle !== 'number') {\n            throw new ComponentModelTrap(`Object handle must be a number (u32), but got ${handle}.`);\n        }\n        const [jParams, out] = this.getParamValuesForHostCall(params, context.getMemory(), context);\n        const resource = resourceManager.getResource(handle);\n        const memory = context.getMemory();\n        try {\n            const result = resource[methodName](...jParams);\n            return this.lowerReturnValue(result, memory, context, out);\n        }\n        catch (error) {\n            return this.handleError(error, memory, context, out);\n        }\n    }\n    async callServiceAsync(memory, methodName, params, resourceManager, context) {\n        if (params.length === 0) {\n            throw new ComponentModelTrap(`Method calls must have at least one parameter (the object pointer).`);\n        }\n        // We need to cut off the first parameter (the object handle).\n        const handle = params.shift();\n        if (typeof handle !== 'number') {\n            throw new ComponentModelTrap(`Object handle must be a number (u32), but got ${handle}.`);\n        }\n        const [jParams, out] = this.getParamValuesForHostCall(params, memory, context);\n        const resource = resourceManager.getResource(handle);\n        try {\n            const result = await resource[methodName](...jParams);\n            return this.lowerReturnValue(result, memory, context, out);\n        }\n        catch (error) {\n            return this.handleError(error, memory, context, out);\n        }\n    }\n}\nexports.MethodType = MethodType;\nclass ResourceHandleType {\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    witName;\n    constructor(witName) {\n        this.witName = witName;\n        this.kind = ComponentModelTypeKind.resourceHandle;\n        this.size = u32.size;\n        this.alignment = u32.alignment;\n        this.flatTypes = u32.flatTypes;\n    }\n    load(memory, offset) {\n        return u32.load(memory, offset);\n    }\n    liftFlat(memory, values) {\n        return u32.liftFlat(memory, values);\n    }\n    alloc(memory) {\n        return u32.alloc(memory);\n    }\n    store(memory, offset, value) {\n        u32.store(memory, offset, value);\n    }\n    lowerFlat(result, memory, value) {\n        u32.lowerFlat(result, memory, value);\n    }\n    copy(dest, dest_offset, src, src_offset) {\n        u32.copy(dest, dest_offset, src, src_offset);\n    }\n    copyFlat(result, dest, values, src) {\n        u32.copyFlat(result, dest, values, src);\n    }\n}\nexports.ResourceHandleType = ResourceHandleType;\nclass ResourceType {\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    witName;\n    id;\n    callables;\n    constructor(witName, id) {\n        this.kind = ComponentModelTypeKind.resource;\n        this.size = u32.size;\n        this.alignment = u32.alignment;\n        this.flatTypes = u32.flatTypes;\n        this.witName = witName;\n        this.id = id;\n        this.callables = new Map();\n    }\n    addConstructor(jsName, func) {\n        this.callables.set(jsName, func);\n    }\n    addDestructor(jsName, func) {\n        this.callables.set(jsName, func);\n    }\n    addStaticMethod(jsName, func) {\n        this.callables.set(jsName, func);\n    }\n    addMethod(jsName, func) {\n        this.callables.set(jsName, func);\n    }\n    getCallable(jsName) {\n        const result = this.callables.get(jsName);\n        if (result === undefined) {\n            throw new ComponentModelTrap(`Method '${jsName}' not found on resource '${this.witName}'.`);\n        }\n        return result;\n    }\n    load(memory, offset, context) {\n        const handle = u32.load(memory, offset);\n        return context.resources.ensure(this.id).getResource(handle);\n    }\n    liftFlat(memory, values, context) {\n        const handle = u32.liftFlat(memory, values);\n        return context.resources.ensure(this.id).getResource(handle);\n    }\n    alloc(memory) {\n        return u32.alloc(memory);\n    }\n    store(memory, offset, value) {\n        const handle = value.$handle();\n        u32.store(memory, offset, handle);\n    }\n    lowerFlat(result, memory, value) {\n        const handle = value.$handle();\n        u32.lowerFlat(result, memory, handle);\n    }\n    copy(dest, dest_offset, src, src_offset) {\n        u32.copy(dest, dest_offset, src, src_offset);\n    }\n    copyFlat(result, dest, values, src) {\n        u32.copyFlat(result, dest, values, src);\n    }\n}\nexports.ResourceType = ResourceType;\nclass AbstractWrapperType {\n    kind;\n    size;\n    alignment;\n    flatTypes;\n    wrapped;\n    constructor(kind, wrapped) {\n        this.kind = kind;\n        this.wrapped = wrapped;\n        this.size = u32.size;\n        this.alignment = u32.alignment;\n        this.flatTypes = u32.flatTypes;\n    }\n    load(memory, offset, context) {\n        return this.wrapped.load(memory, offset, context);\n    }\n    liftFlat(memory, values, context) {\n        return this.wrapped.liftFlat(memory, values, context);\n    }\n    alloc(memory) {\n        return u32.alloc(memory);\n    }\n    store(memory, offset, value, context) {\n        return this.wrapped.store(memory, offset, value, context);\n    }\n    lowerFlat(result, memory, value, context) {\n        return this.wrapped.lowerFlat(result, memory, value, context);\n    }\n    copy(dest, dest_offset, src, src_offset, context) {\n        return this.wrapped.copy(dest, dest_offset, src, src_offset, context);\n    }\n    copyFlat(result, dest, values, src, context) {\n        return this.wrapped.copyFlat(result, dest, values, src, context);\n    }\n}\nclass BorrowType extends AbstractWrapperType {\n    constructor(type) {\n        super(ComponentModelTypeKind.borrow, type);\n    }\n}\nexports.BorrowType = BorrowType;\nclass OwnType extends AbstractWrapperType {\n    constructor(type) {\n        super(ComponentModelTypeKind.own, type);\n    }\n}\nexports.OwnType = OwnType;\nvar InterfaceType;\n(function (InterfaceType) {\n    function is(value) {\n        return typeof value === 'object' && typeof value.id === 'string' && typeof value.witName === 'string'\n            && value.types instanceof Map && value.functions instanceof Map && value.resources instanceof Map;\n    }\n    InterfaceType.is = is;\n})(InterfaceType || (exports.InterfaceType = InterfaceType = {}));\nvar PackageType;\n(function (PackageType) {\n    function is(value) {\n        return typeof value === 'object' && typeof value.id === 'string' && typeof value.witName === 'string'\n            && value.interfaces instanceof Map;\n    }\n    PackageType.is = is;\n})(PackageType || (exports.PackageType = PackageType = {}));\nvar WasmContext;\n(function (WasmContext) {\n    class Default {\n        memory;\n        options;\n        resources;\n        constructor(options, resources) {\n            this.options = options ?? { encoding: 'utf-8' };\n            this.resources = resources ?? new ResourceManagers.Default();\n        }\n        initialize(memory) {\n            if (this.memory !== undefined) {\n                throw new MemoryError(`Memory is already initialized.`);\n            }\n            this.memory = memory;\n        }\n        getMemory() {\n            if (this.memory === undefined) {\n                throw new MemoryError(`Memory not yet initialized.`);\n            }\n            return this.memory;\n        }\n    }\n    WasmContext.Default = Default;\n    function is(value) {\n        const candidate = value;\n        return candidate && typeof candidate.getMemory === 'function' && Options.is(candidate.options) && ResourceManagers.is(candidate.resources);\n    }\n    WasmContext.is = is;\n})(WasmContext || (exports.WasmContext = WasmContext = {}));\nfunction getResourceManager(resource, clazz, context) {\n    let resourceManager;\n    if (context.resources.has(resource.id)) {\n        resourceManager = context.resources.ensure(resource.id);\n    }\n    else {\n        resourceManager = ResourceManager.from(clazz) ?? new ResourceManager.Default();\n        context.resources.set(resource.id, resourceManager);\n    }\n    return resourceManager;\n}\nvar $imports;\n(function ($imports) {\n    function create(world, service, context) {\n        const packageName = world.id.substring(0, world.id.indexOf('/'));\n        const result = Object.create(null);\n        if (world.imports !== undefined) {\n            if (world.imports.functions !== undefined) {\n                result['$root'] = doCreate(world.imports.functions, undefined, service, context);\n            }\n            if (world.imports.interfaces !== undefined) {\n                for (const [name, iface] of world.imports.interfaces) {\n                    const propName = `${name[0].toLowerCase()}${name.substring(1)}`;\n                    result[`${packageName}/${iface.witName}`] = doCreate(iface.functions, iface.resources, service[propName], context);\n                }\n            }\n        }\n        if (world.exports !== undefined) {\n            if (world.exports.interfaces !== undefined) {\n                for (const iface of world.exports.interfaces.values()) {\n                    if (iface.resources === undefined) {\n                        continue;\n                    }\n                    for (const resource of iface.resources.values()) {\n                        const manager = getResourceManager(resource, undefined, context);\n                        const exports = Object.create(null);\n                        exports[`[resource-new]${resource.witName}`] = (rep) => manager.newHandle(rep);\n                        exports[`[resource-rep]${resource.witName}`] = (handle) => manager.getRepresentation(handle);\n                        exports[`[resource-drop]${resource.witName}`] = (handle) => manager.dropHandle(handle);\n                        result[`[export]${packageName}/${iface.witName}`] = exports;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    $imports.create = create;\n    function loop(world, service, context) {\n        const imports = create(world, service, context);\n        const wasmExports = asExports(imports, context);\n        const loop = {\n            id: world.id,\n            witName: world.witName,\n            imports: world.exports !== undefined ? {\n                functions: world.exports.functions,\n                interfaces: world.exports.interfaces,\n            } : undefined,\n            exports: world.imports !== undefined ? {\n                functions: world.imports.functions,\n                interfaces: world.imports.interfaces,\n            } : undefined,\n        };\n        return $exports.bind(loop, wasmExports, context);\n    }\n    $imports.loop = loop;\n    function asExports(imports, context) {\n        const result = Object.create(null);\n        const keys = Object.keys(imports);\n        for (const ifaceName of keys) {\n            const iface = imports[ifaceName];\n            if (ifaceName.startsWith('[export]')) {\n                continue;\n            }\n            else if (ifaceName === '$root') {\n                for (const funcName of Object.keys(iface)) {\n                    result[funcName] = iface[funcName];\n                }\n            }\n            else {\n                const qualifier = `${ifaceName}#`;\n                for (const funcName of Object.keys(iface)) {\n                    if (funcName.startsWith('[constructor]')) {\n                        const managerId = `${ifaceName}/${funcName.substring(13 /* length of [constructor] */)}`;\n                        const resourceManager = context.resources.ensure(managerId);\n                        result[`${qualifier}${funcName}`] = (...args) => {\n                            const handle = iface[funcName](...args);\n                            return resourceManager.registerLoop(handle);\n                        };\n                    }\n                    else if (funcName.startsWith('[method]')) {\n                        let resourceName = funcName.substring(8 /* length of [method] */);\n                        if (resourceName.indexOf('.') !== -1) {\n                            resourceName = resourceName.substring(0, resourceName.indexOf('.'));\n                        }\n                        const managerId = `${ifaceName}/${resourceName}`;\n                        const resourceManager = context.resources.ensure(managerId);\n                        result[`${qualifier}${funcName}`] = ((rep, ...args) => {\n                            return iface[funcName](resourceManager.getLoop(rep), ...args);\n                        });\n                    }\n                    else if (funcName.startsWith('[resource-drop]')) {\n                        result[`${qualifier}[dtor]${funcName.substring(15 /* length of [resource-drop] */)}`] = iface[funcName];\n                    }\n                    else {\n                        result[`${qualifier}${funcName}`] = iface[funcName];\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    function doCreate(functions, resources, service, context) {\n        const result = Object.create(null);\n        if (functions !== undefined) {\n            for (const [funcName, func] of functions) {\n                result[func.witName] = createFunction(func, service[funcName], context);\n            }\n        }\n        if (resources !== undefined) {\n            for (const [resourceName, resource] of resources) {\n                const clazz = service[resourceName];\n                const resourceManager = getResourceManager(resource, clazz, context);\n                for (const [callableName, callable] of resource.callables) {\n                    if (callable instanceof ConstructorType) {\n                        result[callable.witName] = createConstructorFunction(callable, clazz, context);\n                    }\n                    else if (callable instanceof StaticMethodType) {\n                        result[callable.witName] = createStaticMethodFunction(callable, service[resourceName][callableName], context);\n                    }\n                    else if (callable instanceof MethodType) {\n                        result[callable.witName] = createMethodFunction(callableName, callable, resourceManager, context);\n                    }\n                    else if (callable instanceof DestructorType) {\n                        result[callable.witName] = createDestructorFunction(callable, resourceManager);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    function createFunction(callable, serviceFunction, context) {\n        return function (...params) {\n            return callable.callService(serviceFunction, params, context);\n        };\n    }\n    function createConstructorFunction(callable, clazz, context) {\n        return function (...params) {\n            return callable.callService(clazz, params, context);\n        };\n    }\n    function createDestructorFunction(callable, manager) {\n        return function (...params) {\n            return callable.callService(params, manager);\n        };\n    }\n    function createStaticMethodFunction(callable, func, context) {\n        return function (...params) {\n            return callable.callService(func, params, context);\n        };\n    }\n    function createMethodFunction(name, callable, manager, context) {\n        return function (...params) {\n            return callable.callService(name, params, manager, context);\n        };\n    }\n    let worker;\n    (function (worker) {\n        function create(connection, world, context) {\n            const packageName = world.id.substring(0, world.id.indexOf('/'));\n            const result = Object.create(null);\n            if (world.imports !== undefined) {\n                if (world.imports.functions !== undefined) {\n                    result['$root'] = doCreate(connection, '$root', world.imports.functions, undefined, context);\n                }\n                if (world.imports.interfaces !== undefined) {\n                    for (const iface of world.imports.interfaces.values()) {\n                        const qualifier = `${packageName}/${iface.witName}`;\n                        result[qualifier] = doCreate(connection, qualifier, iface.functions, iface.resources, context);\n                    }\n                }\n            }\n            if (world.exports !== undefined) {\n                if (world.exports.interfaces !== undefined) {\n                    for (const iface of world.exports.interfaces.values()) {\n                        if (iface.resources === undefined) {\n                            continue;\n                        }\n                        for (const resource of iface.resources.values()) {\n                            const exports = Object.create(null);\n                            const qualifier = `[export]${packageName}/${iface.witName}`;\n                            const newName = `[resource-new]${resource.witName}`;\n                            exports[newName] = (rep) => connection.callMain(`${qualifier}#${newName}`, [rep]);\n                            const repName = `[resource-rep]${resource.witName}`;\n                            exports[repName] = (handle) => connection.callMain(`${qualifier}#${repName}`, [handle]);\n                            const dropName = `[resource-drop]${resource.witName}`;\n                            exports[dropName] = (handle) => connection.callMain(`${qualifier}#${dropName}`, [handle]);\n                            result[qualifier] = exports;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        worker.create = create;\n        function doCreate(connection, qualifier, functions, resources, context) {\n            const result = Object.create(null);\n            if (functions !== undefined) {\n                for (const [, func] of functions) {\n                    result[func.witName] = function (...params) {\n                        return func.callMain(connection, qualifier, params, context);\n                    };\n                }\n            }\n            if (resources !== undefined) {\n                for (const resource of resources.values()) {\n                    for (const callable of resource.callables.values()) {\n                        result[callable.witName] = function (...params) {\n                            return callable.callMain(connection, qualifier, params, context);\n                        };\n                    }\n                }\n            }\n            return result;\n        }\n    })(worker = $imports.worker || ($imports.worker = {}));\n})($imports || (exports.$imports = $imports = {}));\nvar $exports;\n(function ($exports) {\n    function bind(world, exports, context) {\n        const [root, scoped] = partition(exports);\n        const result = Object.create(null);\n        if (world.exports !== undefined) {\n            if (world.exports.functions !== undefined) {\n                Object.assign(result, doBind(world.exports.functions, undefined, root, context));\n            }\n            if (world.exports.interfaces !== undefined) {\n                for (const [name, iface] of world.exports.interfaces) {\n                    const propName = `${name[0].toLowerCase()}${name.substring(1)}`;\n                    result[propName] = doBind(iface.functions, iface.resources, scoped[iface.id], context);\n                }\n            }\n        }\n        return result;\n    }\n    $exports.bind = bind;\n    function partition(exports) {\n        const root = Object.create(null);\n        const scoped = Object.create(null);\n        for (const [key, value] of Object.entries(exports)) {\n            const parts = key.split('#');\n            if (parts.length === 1) {\n                root[key] = value;\n            }\n            else {\n                const [iface, func] = parts;\n                if (scoped[iface] === undefined) {\n                    scoped[iface] = Object.create(null);\n                }\n                scoped[iface][func] = value;\n            }\n        }\n        return [root, scoped];\n    }\n    function doBind(functions, resources, wasm, context) {\n        const result = Object.create(null);\n        if (functions !== undefined) {\n            for (const [name, func] of functions) {\n                result[name] = createFunction(func, wasm[func.witName], context);\n            }\n        }\n        if (resources !== undefined) {\n            for (const [name, resource] of resources) {\n                const resourceManager = getResourceManager(resource, undefined, context);\n                const cl = clazz.create(resource, wasm, context);\n                resourceManager.setProxyInfo(cl, wasm[`[dtor]${resource.witName}`]);\n                result[name] = cl;\n            }\n        }\n        return result;\n    }\n    function createFunction(func, wasmFunction, context) {\n        return (...params) => {\n            return func.callWasm(params, wasmFunction, context);\n        };\n    }\n    let worker;\n    (function (worker) {\n        function bind(connection, world, exports, context) {\n            const packageName = world.id.substring(0, world.id.indexOf('/'));\n            const [root, scoped] = partition(exports);\n            if (world.exports !== undefined) {\n                doBind(connection, packageName, world.exports.functions, undefined, root, context);\n                if (world.exports.interfaces !== undefined) {\n                    for (const iface of world.exports.interfaces.values()) {\n                        doBind(connection, `${packageName}/${iface.witName}`, iface.functions, iface.resources, scoped[iface.id], context);\n                    }\n                }\n            }\n        }\n        worker.bind = bind;\n        function doBind(connection, qualifier, functions, resources, exports, context) {\n            if (functions !== undefined) {\n                for (const func of functions.values()) {\n                    connection.on(`${qualifier}#${func.witName}`, (memory, params) => {\n                        return func.callWasmFromWorker(memory, exports[func.witName], params, context);\n                    });\n                }\n            }\n            if (resources !== undefined) {\n                for (const resource of resources.values()) {\n                    for (const callable of resource.callables.values()) {\n                        if (callable instanceof ConstructorType || callable instanceof StaticMethodType) {\n                            connection.on(`${qualifier}#${callable.witName}`, (memory, params) => {\n                                return callable.callWasmFromWorker(memory, exports[callable.witName], params, context);\n                            });\n                        }\n                        else {\n                            connection.on(`${qualifier}#${callable.witName}`, (memory, params) => {\n                                return callable.callWasmMethodFromWorker(memory, exports[callable.witName], params, context);\n                            });\n                        }\n                    }\n                }\n            }\n        }\n    })(worker = $exports.worker || ($exports.worker = {}));\n})($exports || (exports.$exports = $exports = {}));\nvar clazz;\n(function (clazz_1) {\n    function create(resource, wasm, context) {\n        let resourceManager;\n        if (context.resources.has(resource.id)) {\n            resourceManager = context.resources.ensure(resource.id);\n        }\n        else {\n            resourceManager = new ResourceManager.Default();\n            context.resources.set(resource.id, resourceManager);\n        }\n        const clazz = class extends Resource.Default {\n            _rep;\n            constructor(...args) {\n                if (args[0] === ResourceManager.handleTag) {\n                    const handle = args[1];\n                    super(handle);\n                    this._rep = args[2];\n                }\n                else {\n                    const ctor = resource.getCallable('constructor');\n                    const handle = ctor.callWasmConstructor(args, wasm[ctor.witName], context);\n                    super(handle);\n                    this._rep = resourceManager.getRepresentation(this.$handle());\n                }\n            }\n            $rep() {\n                return this._rep;\n            }\n        };\n        for (const [name, callable] of resource.callables) {\n            if (callable instanceof MethodType) {\n                clazz.prototype[name] = function (...params) {\n                    return callable.callWasmMethod(this, params, wasm[callable.witName], context);\n                };\n            }\n            else if (callable instanceof DestructorType) {\n                clazz.prototype[name] = function (...params) {\n                    return callable.callWasmMethod(this, params, wasm[callable.witName], context);\n                };\n            }\n            else if (callable instanceof StaticMethodType) {\n                clazz[name] = (...params) => {\n                    return callable.callWasm(params, wasm[callable.witName], context);\n                };\n            }\n        }\n        return clazz;\n    }\n    clazz_1.create = create;\n    function createPromise(connection, qualifier, resource, context) {\n        let resourceManager;\n        if (context.resources.has(resource.id)) {\n            resourceManager = context.resources.ensure(resource.id);\n        }\n        else {\n            resourceManager = new ResourceManager.Default();\n            context.resources.set(resource.id, resourceManager);\n        }\n        const clazz = class extends Resource.Default {\n            _rep;\n            static async $new(...args) {\n                const ctor = resource.getCallable('constructor');\n                const result = await ctor.callWasmConstructorAsync(connection, qualifier, args, context);\n                return new clazz(ResourceManager.handleTag, result, resourceManager.getRepresentation(result));\n            }\n            constructor(_handleTag, handle, rep) {\n                super(handle);\n                this._rep = rep;\n            }\n            $rep() {\n                return this._rep;\n            }\n        };\n        for (const [name, callable] of resource.callables) {\n            if (callable instanceof MethodType) {\n                clazz.prototype[name] = function (...params) {\n                    return callable.callWorkerMethod(connection, qualifier, this, params, context);\n                };\n            }\n            else if (callable instanceof DestructorType) {\n                clazz.prototype[name] = function (...params) {\n                    return callable.callWorkerMethod(connection, qualifier, this, params, context);\n                };\n            }\n            else if (callable instanceof StaticMethodType) {\n                clazz[name] = (...params) => {\n                    return callable.callWorker(connection, qualifier, params, context);\n                };\n            }\n        }\n        return clazz;\n    }\n    clazz_1.createPromise = createPromise;\n})(clazz || (clazz = {}));\nvar $main;\n(function ($main) {\n    function bind(world, service, code, portOrContext, context) {\n        if (portOrContext === undefined) {\n            return bindSync(world, service, code, new WasmContext.Default());\n        }\n        else if (ComponentModelContext.is(portOrContext)) {\n            return bindSync(world, service, code, portOrContext);\n        }\n        else {\n            return bindAsync(world, service, code, portOrContext, context ?? { options: { encoding: 'utf-8' }, resources: new ResourceManagers.Default() });\n        }\n    }\n    $main.bind = bind;\n    async function bindSync(world, service, code, context) {\n        const wasmContext = context !== undefined ? new WasmContext.Default(context.options, context.resources) : new WasmContext.Default();\n        let module;\n        let memory = undefined;\n        if (code.module !== undefined) {\n            module = code.module;\n            memory = code.memory;\n        }\n        else {\n            module = code;\n        }\n        const imports = $imports.create(world, service, wasmContext);\n        if (memory !== undefined) {\n            imports.env.memory = memory;\n        }\n        const instance = await (0, ral_1.default)().WebAssembly.instantiate(module, imports);\n        wasmContext.initialize(new Memory.Default(instance.exports));\n        return $exports.bind(world, instance.exports, wasmContext);\n    }\n    async function bindAsync(world, service, code, port, context) {\n        const connection = await (0, ral_1.default)().Connection.createMain(port);\n        connection.listen();\n        await connection.initialize(code, context.options);\n        bindServiceAsync(connection, world, service, context);\n        return bindApi(connection, world, context);\n    }\n    function bindServiceAsync(connection, world, service, context) {\n        const packageName = world.id.substring(0, world.id.indexOf('/'));\n        if (world.imports !== undefined) {\n            if (world.imports.functions !== undefined) {\n                doBindServiceAsync(connection, '$root', world.imports.functions, undefined, service, context);\n            }\n            if (world.imports.interfaces !== undefined) {\n                for (const [name, iface] of world.imports.interfaces) {\n                    const propName = `${name[0].toLowerCase()}${name.substring(1)}`;\n                    doBindServiceAsync(connection, `${packageName}/${iface.witName}`, iface.functions, iface.resources, service[propName], context);\n                }\n            }\n        }\n        if (world.exports !== undefined) {\n            if (world.exports.interfaces !== undefined) {\n                for (const iface of world.exports.interfaces.values()) {\n                    if (iface.resources === undefined) {\n                        continue;\n                    }\n                    const qualifier = `[export]${packageName}/${iface.witName}`;\n                    for (const resource of iface.resources.values()) {\n                        const manager = getResourceManager(resource, undefined, context);\n                        connection.on(`${qualifier}#[resource-new]${resource.witName}`, (_memory, params) => manager.newHandle(params[0]));\n                        connection.on(`${qualifier}#[resource-rep]${resource.witName}`, (_memory, params) => manager.getRepresentation(params[0]));\n                        connection.on(`${qualifier}#[resource-drop]${resource.witName}`, (_memory, params) => manager.dropHandle(params[0]));\n                    }\n                }\n            }\n        }\n    }\n    function doBindServiceAsync(connection, qualifier, functions, resources, service, context) {\n        if (functions !== undefined) {\n            for (const [funcName, func] of functions) {\n                connection.on(`${qualifier}#${func.witName}`, (memory, params) => {\n                    return func.callServiceAsync(memory, service[funcName], params, context);\n                });\n            }\n        }\n        if (resources !== undefined) {\n            for (const [resourceName, resource] of resources) {\n                const clazz = service[resourceName];\n                const resourceManager = getResourceManager(resource, clazz, context);\n                for (const [callableName, callable] of resource.callables) {\n                    if (callable instanceof ConstructorType) {\n                        connection.on(`${qualifier}#${callable.witName}`, (memory, params) => {\n                            return callable.callServiceAsync(memory, clazz, params, context);\n                        });\n                    }\n                    else if (callable instanceof StaticMethodType) {\n                        connection.on(`${qualifier}#${callable.witName}`, (memory, params) => {\n                            return callable.callServiceAsync(memory, service[resourceName][callableName], params, context);\n                        });\n                    }\n                    else if (callable instanceof MethodType) {\n                        connection.on(`${qualifier}#${callable.witName}`, (memory, params) => {\n                            return callable.callServiceAsync(memory, callableName, params, resourceManager, context);\n                        });\n                    }\n                    else if (callable instanceof DestructorType) {\n                        connection.on(`${qualifier}#${callable.witName}`, (memory, params) => {\n                            return callable.callServiceAsync(memory, params, resourceManager);\n                        });\n                    }\n                }\n            }\n        }\n    }\n    function bindApi(connection, world, context) {\n        const packageName = world.id.substring(0, world.id.indexOf('/'));\n        const result = Object.create(null);\n        if (world.exports !== undefined) {\n            if (world.exports.functions !== undefined) {\n                Object.assign(result, doBindApi(connection, packageName, world.exports.functions, undefined, context));\n            }\n            if (world.exports.interfaces !== undefined) {\n                for (const [name, iface] of world.exports.interfaces) {\n                    const propName = `${name[0].toLowerCase()}${name.substring(1)}`;\n                    result[propName] = doBindApi(connection, `${packageName}/${iface.witName}`, iface.functions, iface.resources, context);\n                }\n            }\n        }\n        return result;\n    }\n    function doBindApi(connection, qualifier, functions, resources, context) {\n        const result = Object.create(null);\n        if (functions !== undefined) {\n            for (const [name, func] of functions) {\n                result[name] = (...params) => {\n                    return func.callWorker(connection, qualifier, params, context);\n                };\n            }\n        }\n        if (resources !== undefined) {\n            for (const [name, resource] of resources) {\n                const resourceManager = getResourceManager(resource, undefined, context);\n                const cl = clazz.createPromise(connection, qualifier, resource, context);\n                resourceManager.setProxyInfo(cl, (self) => {\n                    connection.callWorker(`${qualifier}#[dtor]${resource.witName}`, [self]).\n                        catch(() => {\n                        (0, ral_1.default)().console.error(`Failed to call destructor for ${resource.witName}`);\n                    });\n                });\n                result[name] = cl;\n            }\n        }\n        return result;\n    }\n})($main || (exports.$main = $main = {}));\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseMainConnection = exports.BaseWorkerConnection = exports.Connection = void 0;\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/webAssemblyCommon.d.ts\" preserve=\"true\"/>\nconst uuid = __importStar(require(\"uuid\"));\nconst componentModel_1 = require(\"./componentModel\");\nconst promises_1 = require(\"./promises\");\nconst ral_1 = __importDefault(require(\"./ral\"));\nconst semaphore_1 = require(\"./semaphore\");\nclass ConnectionMemory {\n    static Header = {\n        sync: { offset: 0, size: 4 },\n        errorCode: { offset: 4, size: 4 },\n        resultType: { offset: 8, size: 4 },\n        result: { offset: 12, size: 8 },\n        next: { offset: 20, size: 4 },\n        end: { offset: 24, size: 0 },\n    };\n    buffer;\n    id;\n    next;\n    constructor(sizeOrBuffer, id) {\n        if (sizeOrBuffer === undefined) {\n            sizeOrBuffer = 64 * 1024;\n        }\n        if (typeof sizeOrBuffer === 'number') {\n            this.id = uuid.v4();\n            this.buffer = new SharedArrayBuffer(sizeOrBuffer);\n            this.next = new Uint32Array(this.buffer, ConnectionMemory.Header.next.offset, 1);\n            this.next[0] = ConnectionMemory.Header.end.offset;\n        }\n        else {\n            this.buffer = sizeOrBuffer;\n            this.id = id;\n            this.next = new Uint32Array(this.buffer, ConnectionMemory.Header.next.offset, 1);\n        }\n    }\n    reset() {\n        const view = new Uint8Array(this.buffer, 0, ConnectionMemory.Header.end.offset);\n        view.fill(0);\n        this.next[0] = ConnectionMemory.Header.end.offset;\n    }\n    alloc(align, size) {\n        const next = this.next[0];\n        const result = componentModel_1.Alignment.align(next, align);\n        this.next[0] = result + size;\n        return new componentModel_1.MemoryRange(this, result, size);\n    }\n    realloc() {\n        throw new componentModel_1.ComponentModelTrap('ConnectionMemory does not support realloc');\n    }\n    preAllocated(ptr, size) {\n        return new componentModel_1.MemoryRange(this, ptr, size);\n    }\n    readonly(ptr, size) {\n        return new componentModel_1.ReadonlyMemoryRange(this, ptr, size);\n    }\n}\nclass Connection {\n    static createWorker(world, port, timeout) {\n        return (0, ral_1.default)().Connection.createWorker(port, world, timeout);\n    }\n    memory;\n    constructor(memory) {\n        this.memory = memory;\n    }\n    static serializeParams(params) {\n        const result = [];\n        for (const param of params) {\n            if (typeof param === 'number') {\n                result.push(param);\n            }\n            else {\n                result.push(param.toString());\n            }\n        }\n        return result;\n    }\n    static deserializeParams(params) {\n        const result = [];\n        for (const param of params) {\n            if (typeof param === 'string') {\n                result.push(BigInt(param));\n            }\n            else {\n                result.push(param);\n            }\n        }\n        return result;\n    }\n    static serializeResult(result) {\n        if (typeof result === 'bigint') {\n            return result.toString();\n        }\n        else if (typeof result === 'number') {\n            return result;\n        }\n        return undefined;\n    }\n    static deserializeResult(result) {\n        if (result === undefined) {\n            return;\n        }\n        return typeof result === 'number' ? result : BigInt(result);\n    }\n    static loadResult(buffer) {\n        const view = new DataView(buffer, 0, ConnectionMemory.Header.end.offset);\n        const resultType = view.getUint32(ConnectionMemory.Header.resultType.offset, true);\n        switch (resultType) {\n            case Connection.WasmTypeKind.undefined:\n                return;\n            case Connection.WasmTypeKind.float:\n                return view.getFloat64(ConnectionMemory.Header.result.offset, true);\n            case Connection.WasmTypeKind.signed:\n                return view.getBigInt64(ConnectionMemory.Header.result.offset, true);\n            case Connection.WasmTypeKind.unsigned:\n                return view.getBigUint64(ConnectionMemory.Header.result.offset, true);\n            default:\n                throw new componentModel_1.ComponentModelTrap(`Unexpected result type ${resultType}`);\n        }\n    }\n    static storeResult(buffer, result) {\n        const view = new DataView(buffer, 0, ConnectionMemory.Header.end.offset);\n        if (result === undefined) {\n            view.setUint32(ConnectionMemory.Header.resultType.offset, Connection.WasmTypeKind.undefined, true);\n        }\n        else if (typeof result === 'bigint') {\n            if (result < 0) {\n                view.setUint32(ConnectionMemory.Header.resultType.offset, Connection.WasmTypeKind.signed, true);\n                view.setBigInt64(ConnectionMemory.Header.result.offset, result, true);\n            }\n            else {\n                view.setUint32(ConnectionMemory.Header.resultType.offset, Connection.WasmTypeKind.unsigned, true);\n                view.setBigUint64(ConnectionMemory.Header.result.offset, result, true);\n            }\n        }\n        else if (typeof result === 'number') {\n            view.setUint32(ConnectionMemory.Header.resultType.offset, Connection.WasmTypeKind.float, true);\n            view.setFloat64(ConnectionMemory.Header.result.offset, result, true);\n        }\n        else {\n            throw new componentModel_1.ComponentModelTrap(`Unexpected result type ${result}`);\n        }\n    }\n}\nexports.Connection = Connection;\n(function (Connection) {\n    let ErrorCodes;\n    (function (ErrorCodes) {\n        ErrorCodes[ErrorCodes[\"noHandler\"] = 1] = \"noHandler\";\n        ErrorCodes[ErrorCodes[\"promiseRejected\"] = 2] = \"promiseRejected\";\n    })(ErrorCodes = Connection.ErrorCodes || (Connection.ErrorCodes = {}));\n    let WasmTypeKind;\n    (function (WasmTypeKind) {\n        WasmTypeKind[WasmTypeKind[\"undefined\"] = 0] = \"undefined\";\n        WasmTypeKind[WasmTypeKind[\"float\"] = 1] = \"float\";\n        WasmTypeKind[WasmTypeKind[\"signed\"] = 2] = \"signed\";\n        WasmTypeKind[WasmTypeKind[\"unsigned\"] = 3] = \"unsigned\";\n    })(WasmTypeKind = Connection.WasmTypeKind || (Connection.WasmTypeKind = {}));\n})(Connection || (exports.Connection = Connection = {}));\nclass BaseWorkerConnection extends Connection {\n    world;\n    timeout;\n    handlers;\n    constructor(world, timeout) {\n        super(new ConnectionMemory());\n        this.world = world;\n        this.timeout = timeout;\n        this.handlers = new Map();\n    }\n    dispose() {\n        this.handlers.clear();\n    }\n    on(name, handler) {\n        this.handlers.set(name, handler);\n    }\n    getMemory() {\n        return this.memory;\n    }\n    prepareCall() {\n        this.memory.reset();\n    }\n    callMain(name, params) {\n        const buffer = this.memory.buffer;\n        const sync = new Int32Array(buffer, ConnectionMemory.Header.sync.offset, 1);\n        Atomics.store(sync, 0, 0);\n        const message = {\n            method: 'callMain',\n            name: name,\n            params: Connection.serializeParams(params),\n            memory: { buffer: this.memory.buffer, id: this.memory.id }\n        };\n        this.postMessage(message);\n        // Wait for the answer\n        const result = Atomics.wait(sync, 0, 0, this.timeout);\n        switch (result) {\n            case 'timed-out':\n                throw new componentModel_1.ComponentModelTrap(`Call ${name} to main thread timed out`);\n            case 'not-equal':\n                const value = Atomics.load(sync, 0);\n                // If the value === 1 the service has already provided the result.\n                // Otherwise we actually don't know what happened :-(.\n                if (value !== 1) {\n                    throw new componentModel_1.ComponentModelTrap(`Unexpected value ${value} in sync object`);\n                }\n        }\n        return Connection.loadResult(buffer);\n    }\n    handleMessage(message) {\n        if (message.method === 'initializeWorker') {\n            const wasmContext = new componentModel_1.WasmContext.Default(message.options);\n            const imports = componentModel_1.$imports.worker.create(this, this.world, wasmContext);\n            if (message.memory !== undefined) {\n                imports.env.memory = message.memory;\n            }\n            (0, ral_1.default)().WebAssembly.instantiate(message.module, imports).then((instance) => {\n                wasmContext.initialize(new componentModel_1.Memory.Default(instance.exports));\n                componentModel_1.$exports.worker.bind(this, this.world, instance.exports, wasmContext);\n                this.postMessage({ method: 'reportResult', name: '$initializeWorker', result: 'success' });\n            }).catch((error) => {\n                this.postMessage({ method: 'reportResult', name: '$initializeWorker', error: error.toString() });\n            });\n        }\n        else if (message.method === 'callWorker') {\n            const handler = this.handlers.get(message.name);\n            if (handler === undefined) {\n                this.postMessage({ method: 'reportResult', name: message.name, error: `No handler found for ${message.name}` });\n                return;\n            }\n            try {\n                const memory = new ConnectionMemory(message.memory.buffer, message.memory.id);\n                const result = handler(memory, Connection.deserializeParams(message.params));\n                this.postMessage({ method: 'reportResult', name: message.name, result: Connection.serializeResult(result) });\n            }\n            catch (error) {\n                this.postMessage({ method: 'reportResult', name: message.name, error: `Calling WASM function ${message.name} failed.` });\n            }\n        }\n    }\n}\nexports.BaseWorkerConnection = BaseWorkerConnection;\nclass BaseMainConnection extends Connection {\n    initializeCall;\n    handlers;\n    callQueue;\n    currentCall;\n    constructor() {\n        super(new ConnectionMemory());\n        this.handlers = new Map();\n        this.callQueue = new semaphore_1.Semaphore(1);\n        this.currentCall = undefined;\n    }\n    dispose() {\n        this.handlers.clear();\n        this.callQueue.dispose();\n    }\n    lock(thunk) {\n        return this.callQueue.lock(thunk);\n    }\n    prepareCall() {\n        this.memory.reset();\n    }\n    getMemory() {\n        return this.memory;\n    }\n    async initialize(code, options) {\n        let module;\n        let memory = undefined;\n        if (code.module !== undefined) {\n            module = code.module;\n            memory = code.memory;\n        }\n        else {\n            module = code;\n        }\n        return new Promise((resolve, reject) => {\n            const message = {\n                method: 'initializeWorker',\n                module: module,\n                memory: memory,\n                options: options,\n            };\n            this.initializeCall = { resolve, reject };\n            this.postMessage(message);\n        });\n    }\n    callWorker(name, params) {\n        if (this.currentCall !== undefined) {\n            throw new componentModel_1.ComponentModelTrap('Call already in progress');\n        }\n        this.currentCall = promises_1.CapturedPromise.create();\n        const message = {\n            method: 'callWorker',\n            name: name,\n            params: Connection.serializeParams(params),\n            memory: { buffer: this.memory.buffer, id: this.memory.id }\n        };\n        this.postMessage(message);\n        return this.currentCall.promise;\n    }\n    on(id, handler) {\n        this.handlers.set(id, handler);\n    }\n    handleMessage(message) {\n        if (message.method === 'callMain') {\n            const buffer = message.memory.buffer;\n            const sync = new Int32Array(buffer, ConnectionMemory.Header.sync.offset, 1);\n            const view = new DataView(buffer, 0, ConnectionMemory.Header.end.offset);\n            const handler = this.handlers.get(message.name);\n            if (handler === undefined) {\n                view.setUint32(ConnectionMemory.Header.errorCode.offset, Connection.ErrorCodes.noHandler, true);\n                Atomics.store(sync, 0, 1);\n                Atomics.notify(sync, 0);\n                return;\n            }\n            else {\n                const memory = new ConnectionMemory(buffer, message.memory.id);\n                const params = Connection.deserializeParams(message.params);\n                const result = handler(memory, params);\n                if (result instanceof Promise) {\n                    result.then((value) => {\n                        Connection.storeResult(buffer, value);\n                    }).catch(() => {\n                        view.setUint32(ConnectionMemory.Header.errorCode.offset, Connection.ErrorCodes.promiseRejected, true);\n                    }).finally(() => {\n                        Atomics.store(sync, 0, 1);\n                        Atomics.notify(sync, 0);\n                    });\n                }\n                else {\n                    Connection.storeResult(buffer, result);\n                    Atomics.store(sync, 0, 1);\n                    Atomics.notify(sync, 0);\n                }\n            }\n        }\n        else if (message.method === 'reportResult') {\n            if (message.name === '$initializeWorker') {\n                if (this.initializeCall === undefined) {\n                    // Need to think about logging this.\n                    return;\n                }\n                if (message.error !== undefined) {\n                    this.initializeCall.reject(new Error(message.error));\n                }\n                else {\n                    this.initializeCall.resolve();\n                }\n                this.initializeCall = undefined;\n            }\n            else {\n                if (this.currentCall === undefined) {\n                    // Need to think about logging this.\n                    return;\n                }\n                if (message.error !== undefined) {\n                    this.currentCall.reject(new Error(message.error));\n                }\n                else {\n                    const result = Connection.deserializeResult(message.result);\n                    this.currentCall.resolve(result);\n                }\n                this.currentCall = undefined;\n            }\n        }\n    }\n}\nexports.BaseMainConnection = BaseMainConnection;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CapturedPromise = void 0;\nvar CapturedPromise;\n(function (CapturedPromise) {\n    function create() {\n        let _resolve;\n        let _reject;\n        const promise = new Promise((resolve, reject) => {\n            _resolve = resolve;\n            _reject = reject;\n        });\n        return {\n            promise, resolve: _resolve, reject: _reject\n        };\n    }\n    CapturedPromise.create = create;\n})(CapturedPromise || (exports.CapturedPromise = CapturedPromise = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n    function isInstalled() {\n        return _ral !== undefined;\n    }\n    RAL.isInstalled = isInstalled;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = __importDefault(require(\"./ral\"));\nclass Semaphore {\n    _capacity;\n    _active;\n    _waiting;\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    dispose() {\n        for (const item of this._waiting) {\n            item.reject(new Error('Semaphore disposed'));\n        }\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nconst ril_1 = __importDefault(require(\"./ril\"));\nril_1.default.install();\n__exportStar(require(\"../common/api\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/webAssemblyNode.d.ts\" preserve=\"true\"/>\nconst util_1 = require(\"util\");\nconst worker_threads_1 = require(\"worker_threads\");\nconst ral_1 = __importDefault(require(\"../common/ral\"));\nconst _ril = Object.freeze({\n    TextEncoder: Object.freeze({\n        create(encoding = 'utf-8') {\n            return {\n                encode(input) {\n                    return Buffer.from(input ?? '', encoding);\n                }\n            };\n        }\n    }),\n    TextDecoder: Object.freeze({\n        create(encoding = 'utf-8') {\n            return new util_1.TextDecoder(encoding);\n        }\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            const handle = setTimeout(callback, ms, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setImmediate(callback, ...args) {\n            const handle = setImmediate(callback, ...args);\n            return { dispose: () => clearImmediate(handle) };\n        },\n        setInterval(callback, ms, ...args) {\n            const handle = setInterval(callback, ms, ...args);\n            return { dispose: () => clearInterval(handle) };\n        }\n    }),\n    Connection: Object.freeze({\n        async createWorker(port, world, timeout) {\n            if (port === undefined) {\n                port = worker_threads_1.parentPort;\n            }\n            if (!(port instanceof MessagePort)) {\n                throw new Error(`Expected MessagePort`);\n            }\n            const connection = await import('./connection.js');\n            return new connection.WorkerConnection(port, world, timeout);\n        },\n        async createMain(port) {\n            if (!(port instanceof MessagePort) && !(port instanceof worker_threads_1.Worker)) {\n                throw new Error(`Expected MessagePort or Worker`);\n            }\n            const connection = await import('./connection.js');\n            return new connection.MainConnection(port);\n        }\n    }),\n    Worker: Object.freeze({\n        getPort() {\n            return worker_threads_1.parentPort;\n        },\n        getArgs() {\n            return process.argv.slice(2);\n        },\n        get exitCode() {\n            return process.exitCode;\n        },\n        set exitCode(value) {\n            process.exitCode = value;\n        }\n    }),\n    WebAssembly: Object.freeze({\n        compile(bytes) {\n            return WebAssembly.compile(bytes);\n        },\n        instantiate(module, imports) {\n            return WebAssembly.instantiate(module, imports);\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        if (!ral_1.default.isInstalled()) {\n            ral_1.default.install(_ril);\n        }\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nif (!ral_1.default.isInstalled()) {\n    ral_1.default.install(_ril);\n}\nexports.default = RIL;\n","import * as vscode from \"vscode\";\nimport { WasmContext, Memory } from '@vscode/wasm-component-model';\n\nimport { tergo } from \"./tergo\";\n\nexport async function activate(context: vscode.ExtensionContext) {\n  console.log(\"tergo activated\");\n\n  const filename = vscode.Uri.joinPath(\n    context.extensionUri,\n    'scopa.wasm'\n  );\n\n  console.log(`Looking for the WASM under ${filename}`);\n  const bits = await vscode.workspace.fs.readFile(filename);\n  const module = await WebAssembly.compile(bits);\n  const wasmContext: WasmContext.Default = new WasmContext.Default();\n  const instance = await WebAssembly.instantiate(module, {});\n  wasmContext.initialize(new Memory.Default(instance.exports));\n  const api = tergo._.exports.bind(\n    instance.exports as tergo._.Exports,\n    wasmContext\n  );\n\n  vscode.languages.registerDocumentFormattingEditProvider(\"r\", {\n    provideDocumentFormattingEdits(\n      document,\n      _options,\n      _token\n    ): vscode.TextEdit[] {\n      let documentText = document.getText();\n      console.log(`Formatting the document:\\n${documentText}`);\n      return [\n        vscode.TextEdit.replace(\n          new vscode.Range(\n            document.lineAt(0).range.start,\n            document.lineAt(document.lineCount - 1).range.end\n          ),\n          api.format(documentText)\n        ),\n      ];\n    },\n  });\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {\n  console.log(\"tergo deactivated\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/* eslint-disable @typescript-eslint/ban-types */\nimport * as $wcm from '@vscode/wasm-component-model';\nimport type { i32, ptr, result } from '@vscode/wasm-component-model';\n\nexport namespace tergo {\n  export type Imports = {\n    log: (msg: string) => void;\n  };\n  export namespace Imports {\n    export type Promisified = $wcm.$imports.Promisify<Imports>;\n  }\n  export namespace imports {\n    export type Promisify<T> = $wcm.$imports.Promisify<T>;\n  }\n  export type Exports = {\n    /**\n     * @throws $wcm.wstring.Error\n     */\n    format: (code: string) => string;\n  };\n  export namespace Exports {\n    export type Promisified = $wcm.$exports.Promisify<Exports>;\n  }\n  export namespace exports {\n    export type Promisify<T> = $wcm.$exports.Promisify<T>;\n  }\n}\n\nexport namespace tergo.$ {\n  export namespace imports {\n    export const log = new $wcm.FunctionType<tergo.Imports['log']>('log', [\n      ['msg', $wcm.wstring],\n    ], undefined);\n  }\n  export namespace exports {\n    export const format = new $wcm.FunctionType<tergo.Exports['format']>('format', [\n      ['code', $wcm.wstring],\n    ], new $wcm.ResultType<string, string>($wcm.wstring, $wcm.wstring, $wcm.wstring.Error));\n  }\n}\nexport namespace tergo._ {\n  export const id = 'vscode:tergo/tergo' as const;\n  export const witName = 'tergo' as const;\n  export type $Root = {\n    'log': (msg_ptr: i32, msg_len: i32) => void;\n  };\n  export namespace imports {\n    export const functions: Map<string, $wcm.FunctionType> = new Map([\n      ['log', $.imports.log]\n    ]);\n    export function create(service: tergo.Imports, context: $wcm.WasmContext): Imports {\n      return $wcm.$imports.create<Imports>(_, service, context);\n    }\n    export function loop(service: tergo.Imports, context: $wcm.WasmContext): tergo.Imports {\n      return $wcm.$imports.loop<tergo.Imports>(_, service, context);\n    }\n  }\n  export type Imports = {\n    '$root': $Root;\n  };\n  export namespace exports {\n    export const functions: Map<string, $wcm.FunctionType> = new Map([\n      ['format', $.exports.format]\n    ]);\n    export function bind(exports: Exports, context: $wcm.WasmContext): tergo.Exports {\n      return $wcm.$exports.bind<tergo.Exports>(_, exports, context);\n    }\n  }\n  export type Exports = {\n    'format': (code_ptr: i32, code_len: i32, result: ptr<result<string, string>>) => void;\n  };\n  export function bind(service: tergo.Imports, code: $wcm.Code, context?: $wcm.ComponentModelContext): Promise<tergo.Exports>;\n  export function bind(service: tergo.Imports.Promisified, code: $wcm.Code, port: $wcm.RAL.ConnectionPort, context?: $wcm.ComponentModelContext): Promise<tergo.Exports.Promisified>;\n  export function bind(service: tergo.Imports | tergo.Imports.Promisified, code: $wcm.Code, portOrContext?: $wcm.RAL.ConnectionPort | $wcm.ComponentModelContext, context?: $wcm.ComponentModelContext | undefined): Promise<tergo.Exports> | Promise<tergo.Exports.Promisified> {\n    return $wcm.$main.bind(_, service, code, portOrContext, context);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"crypto\");","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;","module.exports = require(\"vscode\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".extension.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["installedChunks","__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","f32","char","byte","bool","WasmContext","VariantType","Uint8ArrayType","Uint32ArrayType","Uint16ArrayType","TupleType","StaticMethodType","ResultType","ResultError","ResourceType","ResourceManagers","ResourceManager","ResourceHandleType","Resource","RecordType","ReadonlyMemoryRange","PackageType","OwnType","Options","OptionType","MethodType","MemoryRange","MemoryError","Memory","ListType","InterfaceType","Int8ArrayType","Int32ArrayType","Int16ArrayType","FunctionType","FlatTypeKind","FlagsType","EnumType","DestructorType","ConstructorType","ComponentModelTypeKind","ComponentModelTrap","ComponentModelContext","BorrowType","BigUint64ArrayType","BigInt64ArrayType","BaseMemoryRange","Alignment","$main","$imports","$exports","RAL","Connection","wstring","u8","u64","u32","u16","size","s8","s64","s32","s16","result","ptr","option","i64","i32","float64","float32","f64","ral_1","default","componentModel_1","enumerable","get","connection_1","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","__setModuleDefault","v","__importStar","prototype","hasOwnProperty","call","tuple","Float64ArrayType","Float32ArrayType","list","FlatTuple","uuid","Uint8Array","Uint16Array","buffer","Error","constructor","message","super","BigInts","MAX_VALUE_AS_BIGINT","BigInt","Number","MAX_VALUE","asNumber","max","args","reduce","e","min","utf8Decoder","TextDecoder","utf8Encoder","TextEncoder","align","alignment","Math","ceil","getAlignment","doubleWord","word","halfWord","_memory","_ptr","_size","_alignment","_view","memory","view","DataView","getUint8","offset","getInt8","getUint16","assertAlignment","getInt16","getUint32","getInt32","getUint64","getBigUint64","getInt64","getBigInt64","getFloat32","getFloat64","getPtr","getUint8Array","length","getArray","getInt8Array","Int8Array","getUint16Array","byteOffset","getInt16Array","Int16Array","getUint32Array","Uint32Array","getInt32Array","Int32Array","getUint64Array","getBigArray","BigUint64Array","getInt64Array","BigInt64Array","getFloat32Array","Float32Array","getFloat64Array","Float64Array","copyBytes","into","into_offset","getUint8View","set","clazz","BYTES_PER_ELEMENT","isInteger","range","isAllocated","isPreallocated","free","setUint8","setInt8","setUint16","setInt16","setUint32","setInt32","setUint64","setBigUint64","setInt64","setBigInt64","setFloat32","setFloat64","setPtr","getArrayView","getInt8View","getUint16View","getInt16View","getUint32View","getInt32View","getUint64View","getBigArrayView","getInt64View","getFloat32View","getFloat64View","setUint8Array","bytes","setArray","setInt8Array","setUint16Array","setInt16Array","setUint32Array","setInt32Array","setUint64Array","setBigArray","setInt64Array","setFloat32Array","setFloat64Array","NullMemory","id","ArrayBuffer","alloc","realloc","preAllocated","readonly","$i32","$i64","$f32","$f64","WasmTypes","ComponentModelType","RecordField","TupleField","VariantCase","clazz_1","Null","Default","cabi_realloc","v4","newSize","is","candidate","encoding","keepOption","kind","load","store","copy","dest","dest_offset","src","src_offset","types","type","push","values","index","entries","tupleAlignment","$32","$64","reinterpret_i32_as_f32","reinterpret_f32_as_i32","convert_i64_to_i32","convert_i32_to_i64","reinterpret_i64_as_f32","reinterpret_f32_as_i64","reinterpret_i64_as_f64","reinterpret_f64_as_i64","CoerceValueIter","haveFlatTypes","wantFlatTypes","next","done","haveType","wantType","options","resources","satisfies","_value","cause","flatTypes","liftFlat","lowerFlat","copyFlat","_dest","_src","LOW_VALUE","HIGH_VALUE","valid","NAN","NaN","isNaN","fromCodePoint","code","String","asCodePoint","str","codePointAt","_context","getAlignmentAndByteLength","codeUnits","loadFromRange","data","byteLength","reader","decode","fromCharCode","storeIntoRange","encode","writer","i","charCodeAt","string","memRange","context","dataPtr","srcReader","destWriter","static","elementType","offsets","elementMemory","item","JSON","stringify","TypeArrayType","BaseRecordType","fields","field","record","elements","recordAlignment","name","recordFields","tupleFields","_fields","arraySize","numberOfFlags","flags","getType","num32Flags","loadFrom","f","bits","storeInto","Array","fill","tag","cases","case2Index","ctor","discriminantType","maxCaseAlignment","variants","variant","Map","caseIndex","caseVariant","valuesToReadOver","iter","slice","variantValue","c","valuesToFill","payload","wantTypes","haveTypes","have","want","valuesToCopy","maxCaseSize","flat","use","joinFlatType","log2","a","b","case2index","enum","assertRange","none","None","OptionImpl","some","Some","_ctor","isOption","_tag","isNone","isSome","valueType","computeSize","computeAlignment","computeFlatTypes","optValue","asOptionValue","_type","ok","Ok","ResultImpl","error","isOk","isError","_errorClass","okType","errorType","errorClass","_handle","handleOrManager","registerResource","$handle","getRepresentation","resource","$rep","handleTag","Symbol","handleCounter","handleTable","h2r","finalizer","dtor","representationCounter","loopTable","FinalizationRegistry","handle","rep","console","delete","newHandle","dropHandle","setProxyInfo","hasResource","has","getResource","WeakRef","unwrapped","deref","proxy","setProxy","registerProxy","removeResource","registerLoop","representation","getLoop","register","from","obj","$resources","$resourceManager","$manager","managers","manager","ensure","Callable","freeze","witName","params","returnType","paramType","isSingleParam","mode","map","p","liftParamValues","wasmValues","EMPTY_JTYPE","MAX_FLAT_PARAMS","p0","lowerParamValues","EMPTY_WASM_TYPE","toLower","copyParamValues","flatReturnTypes","flatParamTypes","out","MAX_FLAT_RESULTS","last","destResult","transferResult","originalResult","lowerReturnValue","handleError","copyReturnValue","resultStorage","callWasm","wasmFunction","getMemory","liftReturnValue","callWasmMethod","callMain","connection","qualifier","prepareCall","newParams","callWasmFromWorker","transferMemory","func","callWasmMethodFromWorker","callWorker","lock","async","callWorkerMethod","unshift","getParamValuesForHostCall","paramFlatTypes","resultValue","callService","jParams","callServiceAsync","returnFlatTypes","$new","callWasmConstructor","callWasmConstructorAsync","resourceManager","methodName","shift","resourceHandle","callables","addConstructor","jsName","addDestructor","addStaticMethod","addMethod","getCallable","AbstractWrapperType","wrapped","getResourceManager","borrow","own","functions","interfaces","initialize","world","service","packageName","substring","indexOf","imports","doCreate","iface","propName","toLowerCase","funcName","createFunction","resourceName","callableName","callable","createConstructorFunction","createStaticMethodFunction","createMethodFunction","createDestructorFunction","serviceFunction","worker","loop","wasmExports","keys","ifaceName","startsWith","managerId","asExports","bind","newName","repName","dropName","partition","root","scoped","key","parts","split","doBind","wasm","cl","assign","on","_rep","createPromise","_handleTag","bindSync","wasmContext","module","env","instance","WebAssembly","instantiate","doBindServiceAsync","doBindApi","self","catch","portOrContext","port","createMain","listen","bindServiceAsync","bindApi","bindAsync","BaseMainConnection","BaseWorkerConnection","promises_1","semaphore_1","ConnectionMemory","sync","errorCode","resultType","end","sizeOrBuffer","SharedArrayBuffer","Header","reset","createWorker","timeout","serializeParams","param","toString","deserializeParams","serializeResult","deserializeResult","loadResult","WasmTypeKind","float","signed","unsigned","storeResult","ErrorCodes","handlers","dispose","clear","handler","Atomics","method","postMessage","wait","handleMessage","then","initializeCall","callQueue","currentCall","Semaphore","thunk","Promise","resolve","reject","CapturedPromise","promise","noHandler","notify","promiseRejected","finally","_resolve","_reject","_ral","install","ral","isInstalled","_capacity","_active","_waiting","capacity","runNext","active","timer","setImmediate","doRunNext","err","__exportStar","util_1","worker_threads_1","_ril","input","Buffer","setTimeout","callback","ms","clearTimeout","clearImmediate","setInterval","clearInterval","parentPort","MessagePort","WorkerConnection","Worker","MainConnection","getPort","getArgs","process","argv","exitCode","compile","RIL","log","filename","vscode","Uri","joinPath","extensionUri","workspace","fs","readFile","api","tergo","_","languages","registerDocumentFormattingEditProvider","provideDocumentFormattingEdits","document","_options","_token","documentText","getText","TextEdit","replace","Range","lineAt","start","lineCount","format","$","$wcm","require","rnds8Pool","poolPtr","rng","test","byteToHex","unsafeStringify","arr","TypeError","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","parseInt","v35","version","hashfunc","generateUUID","namespace","_namespace","unescape","encodeURIComponent","stringToBytes","DNS","URL","isArray","update","digest","randomUUID","rnds","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","d","definition","chunkId","all","promises","u","prop","r","toStringTag","chunk","moreModules","modules","chunkIds","ids","runtime","installChunk","__webpack_exports__"],"sourceRoot":""}